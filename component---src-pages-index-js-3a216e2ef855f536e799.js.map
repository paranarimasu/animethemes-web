{"version":3,"sources":["webpack:///./src/components/card/index.js","webpack:///./src/components/text/index.js","webpack:///./src/pages/index.js"],"names":["StyledCard","styled","div","props","theme","colors","secondaryTitle","primaryBackground","elevation","hoverable","css","Card","children","StyledText","StyledTextBase","small","Text","StyledIndexPage","gapsColumn","StyledAnnouncement","IndexPage","allAnnouncement","data","as","link","href","totalCount","variant","nodes","map","announcement","gapsRow","icon","faInfo","dangerouslySetInnerHTML","__html","content","id","PageGridItem","path","description","otherPaths","code","gridTemplateColumns","gridColumnGap","gridRowGap","PageLink","Object","entries","color","primaryMediumEmphasis","to","block","truncate","query"],"mappings":"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","file":"component---src-pages-index-js-3a216e2ef855f536e799.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\n\nconst StyledCard = styled.div`\n    padding: 1rem 1.5rem;\n    border-left: 4px solid ${(props) => props.theme.colors.secondaryTitle};\n    border-radius: 0 0.5rem 0.5rem 0;\n\n    background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation]};\n\n    ${(props) => props.hoverable && css`\n        cursor: pointer;\n\n        &:hover {\n            background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation + 1]};\n        }\n    `}\n`;\n\nexport default function Card({ children, ...props }) {\n    return (\n        <StyledCard {...props}>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\nimport PropTypes from \"prop-types\";\n\nconst StyledText = styled(StyledTextBase)`\n    ${(props) => props.small && css`\n        font-size: 0.8rem;\n        font-weight: bold;\n    `}\n`;\n\nexport default function Text({ children, ...props }) {\n    return (\n        <StyledText {...props}>\n            {children}\n        </StyledText>\n    );\n}\n\nText.propTypes = {\n    ...StyledText.propTypes,\n    small: PropTypes.bool\n};\n","import {graphql, Link} from \"gatsby\";\nimport Title from \"components/text/title\";\nimport Text from \"components/text\";\nimport styled from \"styled-components\";\nimport {gapsColumn} from \"styles/mixins\";\nimport Card from \"components/card\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faInfo} from \"@fortawesome/free-solid-svg-icons\";\nimport { Box, Flex, Grid } from \"components/flex\";\nimport theme from \"theme\";\n\nconst StyledIndexPage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledAnnouncement = styled(Text)`\n    & a {\n        color: ${(props) => props.theme.colors.secondaryTitle};\n      \n        &:hover {\n            text-decoration: underline;\n        }\n    }\n`;\n\nexport default function IndexPage({ data: { allAnnouncement } }) {\n    return (\n        <StyledIndexPage>\n            <Title>Welcome, to AnimeThemes.moe!</Title>\n            <Text as=\"p\">\n                <span>This page is still activily being worked on. If you are a developer and interested in contributing feel free to contact us on </span>\n                <Text as=\"a\" link href=\"https://discordapp.com/invite/m9zbVyQ\">Discord</Text>\n                <span>.</span>\n            </Text>\n            <Text as=\"p\">\n                <span>The source code for this page can be found </span>\n                <Text as=\"a\" link href=\"https://github.com/AnimeThemes/animethemes-web\">here</Text>\n                <span> and our other open source projects can be found in our </span>\n                <Text as=\"a\" link href=\"https://github.com/AnimeThemes\">GitHub organization</Text>\n                <span>.</span>\n            </Text>\n            {!!allAnnouncement.totalCount && (\n                <>\n                    <Title variant=\"section\">Announcements</Title>\n                    <Text as=\"p\">These are for demo purposes only. The content may not be accurate.</Text>\n                    {allAnnouncement.nodes.map((announcement) => (\n                        <Card key={announcement.id}>\n                            <Flex gapsRow=\"1rem\">\n                                <Text link>\n                                    <FontAwesomeIcon icon={faInfo}/>\n                                </Text>\n                                <StyledAnnouncement dangerouslySetInnerHTML={{__html: announcement.content}}/>\n                            </Flex>\n                        </Card>\n                    ))}\n                </>\n            )}\n            <Title variant=\"section\">Pages</Title>\n            <Box gapsColumn={[\"2rem\", \"1rem\"]}>\n                <PageGridItem\n                    path=\"/\"\n                    description=\"This page!\"\n                />\n                <PageGridItem\n                    path=\"/search\"\n                    description=\"Search the AnimeThemes database. You can also use the search bar in the navigation.\"\n                />\n                <PageGridItem\n                    path=\"/year\"\n                    description=\"Browse all years present in the database.\"\n                />\n                <PageGridItem\n                    path=\"/year/2009\"\n                    description=\"Browse all seasons of a specific year.\"\n                    otherPaths={{\n                        \"/year/1963\": \"Every year has a page, even 60s, 70s, etc.\"\n                    }}\n                />\n                <PageGridItem\n                    path=\"/year/2009/summer\"\n                    description=\"Browse all anime of a specific season.\"\n                />\n                <PageGridItem\n                    path=\"/series/monogatari\"\n                    description=\"Browse all anime which belong to the same series.\"\n                    otherPaths={{\n                        \"/series/precure\": \"A lot of anime.\",\n                        \"/series/clannad\": \"Only three anime.\",\n                        \"/series/fma\": \"Only two anime.\"\n                    }}\n                />\n                <PageGridItem\n                    path=\"/artist/kana_hanazawa\"\n                    description=\"Browse all songs an artist has performed.\"\n                    otherPaths={{\n                        \"/artist/vickeblanka\": \"Very few songs.\"\n                    }}\n                />\n                <PageGridItem\n                    path=\"/anime/bakemonogatari\"\n                    description=\"Browse all themes of a specific anime.\"\n                    otherPaths={{\n                        \"/anime/etotama\": \"Many themes with a lot of artists.\",\n                        \"/anime/gintama\": \"Theme groups with many themes.\",\n                        \"/anime/bleach\": \"Many themes and many variants.\",\n                        \"/anime/tales_of_phantasia_the_animation\": \"Many sources.\",\n                        \"/anime/isekai_quartet\": \"Multiple series.\"\n                    }}\n                />\n                <PageGridItem\n                    path=\"/anime/bakemonogatari/OP1-NCBD1080\"\n                    description=\"Watch themes.\"\n                    otherPaths={{\n                        \"/anime/uma_musume_pretty_derby/ED5\": \"Many artists.\",\n                        \"/anime/girls_und_panzer/ED-NCBD1080\": \"Many alternative versions.\",\n                        \"/anime/fatekaleid_liner_prismaillya_2wei_herz/OP\": \"Many alternative sources.\",\n                        \"/anime/shingeki_no_kyojin/ED1-NCBD1080\": \"Same video for two entries.\",\n                        \"/anime/shingeki_no_kyojin_ova/ED1-NCBD1080\": \"See above.\"\n                    }}\n                />\n            </Box>\n            {!!process.env.GATSBY_CI && (\n                <>\n                    <Title variant=\"section\">GitHub Pages</Title>\n                    <Text as=\"p\">\n                        <span>You are browsing this site on GitHub Pages. On every commit in the </span>\n                        <Text as=\"a\" code link href=\"https://github.com/AnimeThemes/animethemes-web\">animethemes-web</Text>\n                        <span> repository this site gets updated. This also comes with some limitations like </span>\n                        <Text code>.htaccess</Text>\n                        <span> files not working. So don&apos;t expect everything on this site to work the same way as on the production site.</span>\n                    </Text>\n                </>\n            )}\n        </StyledIndexPage>\n    );\n}\n\nfunction PageGridItem({ path, otherPaths = {}, description }) {\n    return (\n        <Grid gridTemplateColumns={[\"minmax(0, 1fr)\", \"minmax(0, 1fr) 2fr\"]} gridColumnGap=\"1rem\" gridRowGap=\"0.5rem\">\n            <PageLink path={path}/>\n            <Text>{description}</Text>\n            {Object.entries(otherPaths).map(([path, description]) => (\n                <>\n                    <PageLink path={path}/>\n                    <Text color={theme.colors.primaryMediumEmphasis}>{description}</Text>\n                </>\n            ))}\n        </Grid>\n    );\n}\n\nfunction PageLink({ path }) {\n    return (\n        <Link key={path} to={path}>\n            <Text link block truncate>\n                <Text link code>{path}</Text>\n            </Text>\n        </Link>\n    )\n}\n\nexport const query = graphql`\n    query IndexPageQuery {\n        allAnnouncement {\n            nodes {\n                id\n                content\n            }\n            totalCount\n        }\n    }\n`;\n"],"sourceRoot":""}