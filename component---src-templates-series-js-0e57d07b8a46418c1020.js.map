{"version":3,"sources":["webpack:///./src/templates/series.js","webpack:///./src/components/container/sidebar.js","webpack:///./src/components/card/searchResult/index.js","webpack:///./src/components/card/searchResult/anime.js","webpack:///./src/components/button/play.js"],"names":["StyledSeriesPage","styled","div","gapsColumn","StyledCoverContainer","StyledCoverContainerFlex","StyledCoverItemContainer","StyledCover","img","SeriesDetailPage","series","data","images","useAniList","anime","map","info","image","filter","sidebar","src","title","name","variant","query","StyledContainerSidebar","StyledSidebar","StyledBody","ContainerSidebar","children","props","StyledSearchResultCard","Card","StyledChildren","StyledLink","Link","SearchResultCard","description","to","card","alt","bold","color","theme","colors","secondaryTitle","maxLines","small","SearchResultDescription","child","index","length","primaryMediumEmphasis","AnimeSearchResultCard","hideThemes","premiere","year","premiereLink","season","toLowerCase","link","themes","slug","row","wrap","gapsBoth","slice","entries","videos","filename","block","id","icon","faEllipsisH","fixedWidth","StyledButtonPlay","Button","StyledPrefix","secondaryBackground","primaryBackground","ButtonPlay","playing","faCircleNotch","faPlay","spin"],"mappings":"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","file":"component---src-templates-series-js-0e57d07b8a46418c1020.js","sourcesContent":["import Title from \"components/text/title\";\nimport Flex from \"components/flex\";\nimport React from \"react\";\nimport ContainerSidebar from \"components/container/sidebar\";\nimport styled from \"styled-components\";\nimport {gapsColumn} from \"styles/mixins\";\nimport AnimeSearchResultCard from \"components/card/searchResult/anime\";\nimport SEO from \"components/seo\";\nimport useAniList from \"hooks/useAniList\";\nimport {graphql} from \"gatsby\";\n\nconst StyledSeriesPage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledCoverContainer = styled.div`        \n    position: relative;\n    width: 100%;\n    padding-top: 150%;\n`;\nconst StyledCoverContainerFlex = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\nconst StyledCoverItemContainer = styled.div`\n    flex: 1;\n    width: 100%;\n    height: 100%;\n`;\nconst StyledCover = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n\nexport default function SeriesDetailPage({ data: { series } }) {\n    const images = [\n        useAniList(series.anime[0]),\n        useAniList(series.anime[1]),\n        useAniList(series.anime[2]),\n        useAniList(series.anime[3])\n    ].map((info) => info.image).filter((image) => !!image);\n\n    const sidebar = (\n        <Flex gapsColumn=\"1.5rem\">\n            <StyledCoverContainer>\n                <StyledCoverContainerFlex>\n                    {images.map((image) => (\n                        <StyledCoverItemContainer>\n                            <StyledCover src={image}/>\n                        </StyledCoverItemContainer>\n                    ))}\n                </StyledCoverContainerFlex>\n            </StyledCoverContainer>\n        </Flex>\n    );\n\n    return (\n        <StyledSeriesPage>\n            <SEO title={series.name} />\n            <Title>{series.name}</Title>\n            <ContainerSidebar sidebar={sidebar}>\n                <Flex gapsColumn=\"1rem\">\n                    <Title variant=\"section\">Anime</Title>\n                    {series.anime.map((anime) => (\n                        <AnimeSearchResultCard anime={anime}/>\n                    ))}\n                </Flex>\n            </ContainerSidebar>\n        </StyledSeriesPage>\n    );\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        series(slug: { eq: $slug }) {\n            slug\n            name\n            anime {\n                slug\n                name\n                themes {\n                    slug\n                    entries {\n                        videos {\n                            filename\n                        }\n                    }\n                }\n                resources {\n                    link\n                    site\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainerSidebar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n    }\n`;\nconst StyledSidebar = styled.div`\n    flex: 1;\n\n    @media (min-width: 721px) {\n        margin-right: 2rem;\n    }\n    @media (max-width: 720px) {\n        margin-bottom: 1.5rem;\n    }\n`;\nconst StyledBody = styled.div`\n    flex: 3;\n`;\n\nexport default function ContainerSidebar({ sidebar, children, ...props }) {\n    return (\n        <StyledContainerSidebar {...props}>\n           <StyledSidebar>\n               {sidebar}\n           </StyledSidebar>\n           <StyledBody>\n               {children}\n           </StyledBody>\n       </StyledContainerSidebar>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport Text from \"components/text\";\nimport styled from \"styled-components\";\nimport Card from \"components/card/index\";\nimport {gapsColumn} from \"styles/mixins\";\nimport theme from \"theme\";\n\nconst StyledSearchResultCard = styled(Card)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: 0 1rem 0 0;\n`;\nconst StyledCover = styled.img`\n    width: 48px;\n    height: 64px;\n    object-fit: cover;\n`;\nconst StyledBody = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  \n    ${gapsColumn(\"0.25rem\")}  \n  \n    padding: 0 1rem;\n`;\nconst StyledChildren = styled.div`\n    @media (max-width: 720px) {\n        display: none;\n    }\n`;\nconst StyledLink = styled(Link)`\n    display: block;\n`;\n\nexport default function SearchResultCard({ title, description, image, to, children, ...props }) {\n    const card = (\n        <StyledSearchResultCard {...props}>\n            <StyledCover alt=\"Cover\" src={image}/>\n            <StyledBody>\n                <Text bold color={theme.colors.secondaryTitle} maxLines={2}>{title}</Text>\n                <Text small maxLines={1}>{description}</Text>\n            </StyledBody>\n            <StyledChildren>\n                {children}\n            </StyledChildren>\n        </StyledSearchResultCard>\n    );\n\n    if (to) {\n        return (\n            <StyledLink to={to}>\n                {card}\n            </StyledLink>\n        );\n    }\n\n    return card;\n}\n\nexport function SearchResultDescription({ children }) {\n    return children.filter((child) => !!child).map((child, index, { length }) => (\n        <Text color={theme.colors.primaryMediumEmphasis}>\n            <span>{child}</span>\n            {index < length - 1 && (\n                <span color={theme.colors.primaryMediumEmphasis}> &bull; </span>\n            )}\n        </Text>\n    ));\n}\n","import {Link} from \"gatsby\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEllipsisH} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport useAniList from \"hooks/useAniList\";\nimport SearchResultCard, {SearchResultDescription} from \"components/card/searchResult\";\nimport Elevator from \"components/elevator\";\nimport ButtonPlay from \"components/button/play\";\n\nexport default function AnimeSearchResultCard({ anime, hideThemes = false }) {\n    const { image } = useAniList(anime);\n\n    let premiere = anime.year;\n    let premiereLink = `/year/${anime.year}`;\n    if (anime.season) {\n        premiere = anime.season + \" \" + premiere;\n        premiereLink += `/${anime.season.toLowerCase()}`;\n    }\n\n    let description = (\n        <SearchResultDescription>\n            <span>Anime</span>\n            {!!premiere && (\n                <Link to={premiereLink}>\n                    <Text link>{premiere}</Text>\n                </Link>\n            )}\n            <span>{anime.themes.length} themes</span>\n        </SearchResultDescription>\n    );\n\n    return (\n        <SearchResultCard\n            title={anime.name}\n            description={description}\n            image={image}\n            to={`/anime/${anime.slug}`}\n        >\n            {!hideThemes && (\n                <Elevator>\n                    <Flex row wrap gapsBoth=\"0.75rem\">\n                        {anime.themes.slice(0, 4).filter((theme) => {\n                            return theme.entries.length && theme.entries[0].videos.length;\n                        }).map((theme) => (\n                            <ButtonPlay key={theme.id} to={`/video/${theme.entries[0].videos[0].filename}`}>\n                                <Text small block>{theme.slug}</Text>\n                            </ButtonPlay>\n                        ))}\n                        {anime.themes.length > 4 && (\n                            <Button icon title=\"Show all themes\">\n                                <FontAwesomeIcon icon={faEllipsisH} fixedWidth/>\n                            </Button>\n                        )}\n                    </Flex>\n                </Elevator>\n            )}\n        </SearchResultCard>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircleNotch, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\nconst StyledBody = styled.div`\n    padding: 0.5rem;  \n`;\n\nexport default function ButtonPlay({ children, playing, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={playing ? faCircleNotch : faPlay} spin={playing} fixedWidth />\n            </StyledPrefix>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledButtonPlay>\n    );\n}\n"],"sourceRoot":""}