{"version":3,"sources":["webpack:///./src/components/text/title.js","webpack:///./src/components/text/style.js","webpack:///./src/pages/year.js","webpack:///./src/components/flex/index.js"],"names":["StyledTitlePage","styled","StyledTextBase","attrs","props","as","color","theme","colors","primaryTitle","StyledTitleSection","primaryHighEmphasis","Title","variant","children","span","code","link","css","secondaryTitle","bold","block","maxLines","elevatedPrimaryBackground","propTypes","PropTypes","string","bool","number","StyledYearPage","div","YearIndexPage","allAnime","data","title","groupedByYear","map","year","alignItems","justifyContent","to","query","StyledFlex","row","wrap","gapsRow","gapsColumn","gapsBoth","StyledFlexItem","flex","alignSelf","justifySelf","Flex","FlexItem"],"mappings":"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","file":"component---src-pages-year-js-f7792d7b9cb3fb3c8cb3.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\n\nconst StyledTitlePage = styled(StyledTextBase).attrs((props) => ({\n    as: \"h1\",\n    color: props.theme.colors.primaryTitle\n}))`\n    font-size: 2rem;\n    font-weight: bold;\n`;\nconst StyledTitleSection = styled(StyledTextBase).attrs((props) => ({\n    as: \"h2\",\n    color: props.theme.colors.primaryHighEmphasis\n}))`\n    font-size: 1rem;\n    font-weight: bold;\n    text-transform: uppercase;\n`;\n\nexport default function Title({ variant = \"page\", children, ...props }) {\n    switch (variant) {\n        case \"section\":\n            return (\n                <StyledTitleSection {...props}>\n                    {children}\n                </StyledTitleSection>\n            );\n        case \"page\":\n        default:\n            return (\n                <StyledTitlePage {...props}>\n                    {children}\n                </StyledTitlePage>\n            );\n    }\n}\n","import styled, { css } from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport PropTypes from \"prop-types\";\n\nexport const StyledTextBase = styled.span.attrs((props) => ({\n    as: props.as || (props.code ? \"code\" : \"span\")\n}))`\n    color: ${(props) => props.color || \"inherit\"};\n\n    ${(props) => props.link && css`\n        color: ${(props) => props.theme.colors.secondaryTitle};\n            \n        &:hover {\n            text-decoration: underline;\n        }\n    `}\n\n    ${(props) => props.bold && css`\n        font-weight: bold;\n    `}\n    \n    ${(props) => props.block && css`\n        display: block;\n    `}\n\n    ${(props) => props.maxLines && css`\n        display: -webkit-box;\n        -webkit-line-clamp: ${props.maxLines};\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    `}\n  \n    ${(props) => props.code && css`\n        font-family: monospace;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n        background-color: ${elevatedPrimaryBackground};\n        line-height: 1.5rem;\n    `}\n\n    margin: 0;\n`;\n\nStyledTextBase.propTypes = {\n    color: PropTypes.string,\n    link: PropTypes.bool,\n    block: PropTypes.bool,\n    maxLines: PropTypes.number,\n    code: PropTypes.bool\n};\n","import styled from \"styled-components\";\nimport Flex from \"components/flex\";\nimport Button from \"components/button\";\nimport Title from \"components/text/title\";\nimport SEO from \"components/seo\";\nimport {graphql} from \"gatsby\";\n\nconst StyledYearPage = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));\n    grid-auto-rows: 8rem;\n`;\n\nexport default function YearIndexPage({ data: { allAnime } }) {\n    return (\n        <StyledYearPage>\n            <SEO title=\"Browse by Year\" />\n            {allAnime.groupedByYear.map(({ year }) => (\n                <Flex key={year} alignItems=\"center\" justifyContent=\"center\">\n                    <Button to={`/year/${year}`}>\n                        <Title variant=\"page\">{year}</Title>\n                    </Button>\n                </Flex>\n            ))}\n        </StyledYearPage>\n    );\n}\n\nexport const query = graphql`\n    query YearPageQuery {\n        allAnime {\n            groupedByYear: group(field: year) {\n                year: fieldValue\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {gapsColumn, gapsRow} from \"styles/mixins\";\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.row ? \"row\" : \"column\"};\n    flex-wrap: ${(props) => props.wrap ? \"wrap\" : \"nowrap\"};\n    justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n    align-items: ${(props) => props.alignItems || \"stretch\"};\n\n    ${(props) => props.gapsRow && gapsRow(props.gapsRow)}\n    ${(props) => props.gapsColumn && gapsColumn(props.gapsColumn)}\n    ${(props) => props.gapsBoth && css`\n        // Hack to have gutters between items without an outer margin\n        margin: calc(${props.gapsBoth} / -2);\n\n        & > * {\n            margin: calc(${props.gapsBoth} / 2);\n        }\n    `}\n`;\nconst StyledFlexItem = styled.div`\n    flex: ${(props) => props.flex || \"0 0 auto\"};\n    align-self: ${(props) => props.alignSelf || \"auto\"};\n    justify-self: ${(props) => props.justifySelf || \"auto\"};\n`;\n\nexport default function Flex({ children, ...props }) {\n    return (\n        <StyledFlex {...props}>\n            {children}\n        </StyledFlex>\n    );\n}\n\nexport function FlexItem({ children, ...props }) {\n    return (\n        <StyledFlexItem {...props}>\n            {children}\n        </StyledFlexItem>\n    );\n}\n"],"sourceRoot":""}