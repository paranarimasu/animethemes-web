{"version":3,"sources":["webpack:///./src/components/card/searchResult/theme.js","webpack:///./src/hooks/useAnime.js","webpack:///./src/components/container/sidebar.js","webpack:///./src/templates/artist.js","webpack:///./src/components/card/searchResult/index.js","webpack:///./plugins/gatsby-source-animethemes/src/utils/withCache.js","webpack:///./src/components/descriptionList/index.js","webpack:///./plugins/gatsby-source-animethemes/src/index.js","webpack:///./src/components/utils/songTitleWithArtists.js","webpack:///./node_modules/node-fetch/browser.js","webpack:///./src/hooks/useAniListArtist.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./src/components/externalLink/index.js"],"names":["ThemeSearchResultCard","slug","theme","anime","useSWR","baseUrl","url","fetch","then","res","json","data","image","useAniList","entries","videos","title","song","description","to","link","name","filename","StyledContainerSidebar","styled","div","StyledSidebar","StyledBody","ContainerSidebar","sidebar","children","props","StyledArtistPage","gapsColumn","StyledCover","img","fullWidth","StyledList","ArtistDetailPage","artist","performances","sort","a","b","localeCompare","src","alt","members","length","map","member","groups","group","resources","resource","href","site","variant","performance","query","StyledSearchResultCard","Card","StyledChildren","SearchResultCard","card","maxLines","small","cache","Map","module","exports","key","init","has","set","get","StyledDescriptionList","dl","StyledKey","dt","StyledValue","dd","DescriptionList","Object","require","withCache","process","GATSBY_API_URL","response","fetchJsonCached","createFieldParams","fields","join","SongTitleWithArtists","index","as","global","self","window","Error","getGlobal","default","bind","Headers","Request","Response","useState","setImage","useEffect","isCanceled","fetchAniListArtist","aniListArtist","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","fn","this","args","arguments","apply","err","undefined","StyledExternalLink","Text","attrs","forwardedAs","gapsRow","ExternalLink","target","icon","faChevronCircleRight"],"mappings":"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","file":"component---src-templates-artist-js-a7f49cf8679285218187.js","sourcesContent":["import {Link} from \"gatsby\";\nimport useAniList from \"hooks/useAniList\";\nimport SearchResultCard from \"components/card/searchResult\";\nimport SongTitleWithArtists from \"components/utils/songTitleWithArtists\";\nimport useAnime from \"hooks/useAnime\";\nimport Text from \"components/text\";\n\nexport default function ThemeSearchResultCard({ theme }) {\n    const anime = useAnime(theme.anime.slug);\n    const { image } = useAniList(anime);\n\n    if (!theme.entries[0] || !theme.entries[0].videos[0]) {\n        return null;\n    }\n\n    return (\n        <SearchResultCard\n            title={<SongTitleWithArtists song={theme.song}/>}\n            description={<>\n                <span>Theme • {theme.slug} • </span>\n                <Link to={`/anime/${theme.anime.slug}`}>\n                    <Text link>{theme.anime.name}</Text>\n                </Link>\n            </>}\n            image={image}\n            to={`/video/${theme.entries[0].videos[0].filename}`}\n        />\n    );\n}\n","// TODO: This will be obsolete when cover images are provided with anime.\n\nimport useSWR from \"swr\";\nimport {baseUrl} from \"../../plugins/gatsby-source-animethemes/src/index\";\n\nexport default function useAnime(slug) {\n    const { data: anime } = useSWR(\n        `${baseUrl}/api/anime/${slug}`,\n        (url) => fetch(url).then((res) => res.json())\n    );\n\n    return anime;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainerSidebar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n    }\n`;\nconst StyledSidebar = styled.div`\n    flex: 1;\n\n    @media (min-width: 721px) {\n        margin-right: 2rem;\n    }\n    @media (max-width: 720px) {\n        margin-bottom: 1.5rem;\n    }\n`;\nconst StyledBody = styled.div`\n    flex: 3;\n`;\n\nexport default function ContainerSidebar({ sidebar, children, ...props }) {\n    return (\n        <StyledContainerSidebar {...props}>\n           <StyledSidebar>\n               {sidebar}\n           </StyledSidebar>\n           <StyledBody>\n               {children}\n           </StyledBody>\n       </StyledContainerSidebar>\n    );\n}\n","import React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport styled from \"styled-components\";\nimport useAniList from \"../hooks/useAniListArtist\";\nimport ExternalLink from \"../components/externalLink\";\nimport DescriptionList from \"components/descriptionList\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport Flex from \"components/flex\";\nimport ContainerSidebar from \"components/container/sidebar\";\nimport {fullWidth, gapsColumn} from \"styles/mixins\";\nimport ThemeSearchResultCard from \"components/card/searchResult/theme\";\n\nconst StyledArtistPage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledCover = styled.img(fullWidth);\nconst StyledList = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    ${gapsColumn(\"0.5rem\")}\n\n    text-align: center;\n`;\n\nexport default function ArtistDetailPage({ data: { artist } }) {\n    const { image } = useAniList(artist);\n\n    const performances = artist.performances.sort((a, b) => {\n        return a.song.theme.anime.name.localeCompare(b.song.theme.anime.name);\n    });\n\n    const sidebar = (\n        <Flex gapsColumn=\"1.5rem\">\n            <StyledCover src={image} alt=\"Cover\"/>\n            <DescriptionList>\n                {{\n                    \"Members\": (\n                        !!artist.members && !!artist.members.length && (\n                            <StyledList>\n                                {artist.members.map((member) =>\n                                    <Link to={`/artist/${member.slug}`}>\n                                        <Text link>\n                                            {member.name}\n                                        </Text>\n                                    </Link>\n                                )}\n                            </StyledList>\n                        )\n                    ),\n                    \"Member of\": (\n                        !!artist.groups && !!artist.groups.length && (\n                            <StyledList>\n                                {artist.groups.map((group) =>\n                                    <Link to={`/artist/${group.slug}`}>\n                                        <Text link>\n                                            {group.name}\n                                        </Text>\n                                    </Link>\n                                )}\n                            </StyledList>\n                        )\n                    ),\n                    \"Links\": (\n                        artist.resources.map((resource) => (\n                            <ExternalLink key={resource.link} href={resource.link}>\n                                {resource.site}\n                            </ExternalLink>\n                        ))\n                    )\n                }}\n            </DescriptionList>\n        </Flex>\n    );\n\n    return (\n        <StyledArtistPage>\n            <Title>{artist.name}</Title>\n            <ContainerSidebar sidebar={sidebar}>\n                <Flex gapsColumn=\"1rem\">\n                    <Title variant=\"section\">Song Perfomances</Title>\n                    {performances.map((performance) => (\n                        <ThemeSearchResultCard theme={{ ...performance.song.theme, song: performance.song }}/>\n                    ))}\n                </Flex>\n            </ContainerSidebar>\n        </StyledArtistPage>\n    );\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        artist(slug: { eq: $slug }) {\n            name\n            performances {\n                song {\n                    title\n                    performances {\n                        artist {\n                            slug\n                            name\n                        }\n                        as\n                    }\n                    theme {\n                        slug\n                        anime {\n                            slug\n                            name\n                        }\n                        entries {\n                            videos {\n                                filename\n                            }\n                        }\n                    }\n                }\n            }\n            resources {\n                link\n                site\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport styled from \"styled-components\";\nimport Card from \"components/card/index\";\nimport {gapsColumn} from \"styles/mixins\";\n\nconst StyledSearchResultCard = styled(Card)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: 0 1rem 0 0;\n`;\nconst StyledCover = styled.img`\n    width: 48px;\n    height: 64px;\n    object-fit: cover;\n`;\nconst StyledBody = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  \n    ${gapsColumn(\"0.25rem\")}  \n  \n    padding: 0 1rem;\n`;\nconst StyledChildren = styled.div`\n    @media (max-width: 720px) {\n        display: none;\n    }\n`;\n\nexport default function SearchResultCard({ title, description, image, to, children, ...props }) {\n    const card = (\n        <StyledSearchResultCard {...props}>\n            <StyledCover alt=\"Cover\" src={image}/>\n            <StyledBody>\n                <Title variant=\"card\" maxLines={2}>{title}</Title>\n                <Text small maxLines={1}>{description}</Text>\n            </StyledBody>\n            <StyledChildren>\n                {children}\n            </StyledChildren>\n        </StyledSearchResultCard>\n    );\n\n    if (to) {\n        return (\n            <Link to={to}>\n                {card}\n            </Link>\n        );\n    }\n\n    return card;\n}\n","const cache = new Map();\n\nfunction withCache(key, init) {\n    if (!cache.has(key)) {\n        cache.set(key, init(key));\n    }\n\n    return cache.get(key);\n}\n\nmodule.exports = withCache;\n","import React from 'react';\nimport Title from \"components/text/title\";\nimport styled from \"styled-components\";\n\nconst StyledDescriptionList = styled.dl`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    margin: 0;\n`;\nconst StyledKey = styled.dt`\n    margin: 0 0 0.25rem 0;\n`;\nconst StyledValue = styled.dd`\n    margin: 0;\n\n    &:not(:last-child) {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nexport default function DescriptionList({ children, ...props }) {\n    return (\n        <StyledDescriptionList {...props}>\n            {Object.entries(children).map(([ title, description ]) => (\n                !!description && (\n                    <>\n                        <StyledKey>\n                            <Title variant=\"section\">{title}</Title>\n                        </StyledKey>\n                        <StyledValue>{description}</StyledValue>\n                    </>\n                )\n            ))}\n        </StyledDescriptionList>\n    );\n}\n","const fetch = require(\"node-fetch\");\nconst withCache = require(\"./utils/withCache\");\n\nconst baseUrl = process.env.GATSBY_API_URL || \"https://animethemes.dev\";\n\nconst requestCooldown = 1000;\nlet lastRequest;\n\nasync function fetchJsonCached(url, init) {\n    // Debounce, we should only request once every second\n    if (lastRequest) {\n        const expiredTime = Date.now() - lastRequest;\n        if (expiredTime < requestCooldown) {\n            await sleep(requestCooldown - expiredTime);\n        }\n    }\n\n    return await withCache(\n        url,\n        (url) => fetch(url, init).then((response) => response.json())\n    );\n}\n\nfunction createFieldParams(fields) {\n    return Object.entries(fields)\n        .map(([ key, values ]) => `fields[${key}]=${values.join()}`)\n        .join(\"&\");\n}\n\nasync function sleep(millis) {\n    return await new Promise((resolve) => setTimeout(resolve, millis));\n}\n\nmodule.exports = {\n    baseUrl,\n    fetchJsonCached,\n    createFieldParams\n};\n","import Text from \"components/text\";\nimport {Link} from \"gatsby\";\n\nexport default function SongTitleWithArtists({ song }) {\n    return (\n        <>\n            <span>{song.title}</span>\n            {!!song.performances && !!song.performances.length && (\n                <>\n                    <Text small> by </Text>\n                    {song.performances.map((performance, index) => (\n                        <>\n                            <Link to={`/artist/${performance.artist.slug}`}>\n                                <Text key={performance.as || performance.artist.name} link>\n                                    {performance.as || performance.artist.name}\n                                </Text>\n                            </Link>\n                            {index < song.performances.length - 1 && (\n                                <Text small>\n                                    {index === song.performances.length - 2 ? \" & \" : \", \"}\n                                </Text>\n                            )}\n                        </>\n                    ))}\n                </>\n            )}\n        </>\n    );\n}\n","\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar global = getGlobal();\nmodule.exports = exports = global.fetch; // Needed for TypeScript and Webpack.\n\nif (global.fetch) {\n  exports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import {fetchAniListArtist} from \"api/aniList\";\nimport {useEffect, useState} from \"react\";\n\nexport default function useAniList(artist) {\n    const [image, setImage] = useState(null);\n\n    useEffect(() => {\n        let isCanceled = false;\n\n        fetchAniListArtist(artist.name)\n            .then(aniListArtist => {\n                if (!isCanceled) {\n                    setImage(aniListArtist.image);\n                }\n            });\n\n        return () => { isCanceled = true };\n    }, [artist]);\n\n    return { image };\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronCircleRight} from \"@fortawesome/free-solid-svg-icons\";\nimport Text from \"components/text\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledExternalLink = styled(Text).attrs({\n    forwardedAs: \"a\",\n    link: true\n})`\n    ${gapsRow(\"0.25rem\")}\n`;\n\nexport default function ExternalLink({ href, children, ...props }) {\n    return (\n        <StyledExternalLink href={href} target=\"_blank\" {...props}>\n            <span>{children}</span>\n            <FontAwesomeIcon icon={faChevronCircleRight}/>\n        </StyledExternalLink>\n    );\n}\n"],"sourceRoot":""}