{"version":3,"sources":["webpack:///./src/components/card/index.js","webpack:///./src/components/tag/index.js","webpack:///./src/components/text/index.js","webpack:///./src/components/switcher/index.js","webpack:///./src/components/container/sidebar.js","webpack:///./src/components/utils/themeEntryTags.js","webpack:///./src/components/descriptionList/index.js","webpack:///./src/components/utils/videoTags.js","webpack:///./src/components/card/collapse.js","webpack:///./src/components/card/theme/style.js","webpack:///./src/components/card/theme/index.js","webpack:///./src/components/switcher/theme.js","webpack:///./src/templates/anime.js","webpack:///./src/components/button/play.js","webpack:///./src/components/utils/songTitleWithArtists.js","webpack:///./src/hooks/useImage.js","webpack:///./src/components/button/video.js","webpack:///./src/components/externalLink/index.js"],"names":["StyledCard","styled","div","props","theme","colors","secondaryTitle","primaryBackground","elevation","hoverable","css","Card","children","StyledTag","span","gapsRow","StyledTagIcon","FontAwesomeIcon","primaryLowEmphasis","warning","warningTitle","Tag","icon","iconProps","fixedWidth","small","color","primaryHighEmphasis","StyledText","StyledTextBase","Text","StyledSwitcher","Flex","attrs","flexInline","elevatedPrimaryBackground","Switcher","StyledContainerSidebar","StyledSidebar","StyledBody","ContainerSidebar","sidebar","ThemeEntryTags","entry","flexWrap","gapsBoth","faFilm","episodes","spoiler","faBomb","nsfw","faExclamationTriangle","StyledDescriptionList","dl","StyledKey","dt","StyledValue","dd","DescriptionList","Object","entries","filter","map","title","description","variant","VideoTags","video","resolution","nc","faNotEqual","subbed","faClosedCaptioning","lyrics","faComment","uncen","faEye","source","faCompactDisc","toUpperCase","overlap","faStream","StyledCollapse","height","CollapseCard","useState","collapse","setCollapse","setHeight","ref","useRef","useEffect","current","offsetHeight","onClick","StyledThemeCard","gapsColumn","StyledRow","StyledSequence","primaryTitle","secondary","primaryMediumEmphasis","StyledHeader","StyledVersion","StyledVideoListContainer","StyledVideoList","ThemeCard","slug","bold","song","version","videos","index","anime","ThemeSwitcher","themes","groups","useMemo","reduce","group","find","name","push","activeGroup","setActiveGroup","length","active","StyledAnimePage","StyledCover","img","fullWidth","StyledList","AnimeDetailPage","data","largeCover","useImage","src","alt","synonyms","synonym","to","year","season","toLowerCase","link","series","resources","resource","href","site","maxLines","dangerouslySetInnerHTML","__html","synopsis","query","StyledButtonPlay","Button","StyledPrefix","secondaryBackground","ButtonPlay","playing","faCircleNotch","faPlay","spin","SongTitleWithArtists","songTitleLinkTo","performances","performance","artist","as","resourceWithImages","images","image","facet","smallCover","VideoButton","currentVideo","useContext","PlayerContext","videoSlug","createVideoSlug","filename","StyledExternalLink","forwardedAs","ExternalLink","target","faChevronCircleRight"],"mappings":"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","file":"component---src-templates-anime-js-f59c4f4865aa00f77ca4.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\n\nconst StyledCard = styled.div`\n    padding: 1rem 1.5rem;\n    border-left: 4px solid ${(props) => props.theme.colors.secondaryTitle};\n    border-radius: 0 0.5rem 0.5rem 0;\n\n    background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation]};\n\n    ${(props) => props.hoverable && css`\n        cursor: pointer;\n\n        &:hover {\n            background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation + 1]};\n        }\n    `}\n`;\n\nexport default function Card({ children, ...props }) {\n    return (\n        <StyledCard {...props}>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {gapsRow} from \"styles/mixins\";\nimport Text from \"components/text\";\nimport theme from \"theme\";\n\nconst StyledTag = styled.span`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n\n    ${gapsRow(\"0.25rem\")}\n`;\nconst StyledTagIcon = styled(FontAwesomeIcon)`\n    color: ${(props) => props.theme.colors.primaryLowEmphasis};\n\n    ${(props) => props.warning && css`\n        color: ${(props) => props.theme.colors.warningTitle};\n    `}\n`;\n\nexport default function Tag({ icon, iconProps, warning, children, ...props }) {\n    return (\n        <StyledTag {...props}>\n            {!!icon && (\n                <StyledTagIcon icon={icon} fixedWidth warning={warning} {...iconProps}/>\n            )}\n            {!!children && (\n                <Text small color={theme.colors.primaryHighEmphasis}>\n                    {children}\n                </Text>\n            )}\n        </StyledTag>\n    );\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\nimport PropTypes from \"prop-types\";\n\nconst StyledText = styled(StyledTextBase)`\n    ${(props) => props.small && css`\n        font-size: 0.8rem;\n        font-weight: bold;\n    `}\n`;\n\nexport default function Text({ children, ...props }) {\n    return (\n        <StyledText {...props}>\n            {children}\n        </StyledText>\n    );\n}\n\nText.propTypes = {\n    ...StyledText.propTypes,\n    small: PropTypes.bool\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport { Flex } from \"components/flex\";\n\nconst StyledSwitcher = styled(Flex).attrs({\n    flexInline: true,\n    gapsRow: \"0.5rem\"\n})`\n    background-color: ${elevatedPrimaryBackground};\n\n    border-radius: 1rem;\n`;\n\nexport default function Switcher({ children, ...props }) {\n    return (\n        <StyledSwitcher {...props}>\n            {children}\n        </StyledSwitcher>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainerSidebar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n    }\n`;\nconst StyledSidebar = styled.div`\n    flex: 1;\n\n    @media (min-width: 721px) {\n        margin-right: 2rem;\n    }\n    @media (max-width: 720px) {\n        margin-bottom: 1.5rem;\n    }\n`;\nconst StyledBody = styled.div`\n    flex: 3;\n`;\n\nexport default function ContainerSidebar({ sidebar, children, ...props }) {\n    return (\n        <StyledContainerSidebar {...props}>\n            <StyledSidebar>\n                {sidebar}\n            </StyledSidebar>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledContainerSidebar>\n    );\n}\n","import Tag from \"components/tag\";\nimport {faBomb, faExclamationTriangle, faFilm} from \"@fortawesome/free-solid-svg-icons\";\nimport { Flex } from \"components/flex\";\nimport React from \"react\";\n\nexport default function ThemeEntryTags({ entry }) {\n    return (\n        <Flex flexWrap=\"wrap\" gapsBoth=\"0.75rem\">\n            <Tag icon={faFilm}>\n                {entry.episodes || \"—\"}\n            </Tag>\n            {!!entry.spoiler && (\n                <Tag icon={faBomb} warning>\n                    SPOILER\n                </Tag>\n            )}\n            {!!entry.nsfw && (\n                <Tag icon={faExclamationTriangle} warning>\n                    NSFW\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import {Fragment} from \"react\";\nimport styled from \"styled-components\";\nimport Title from \"components/text/title\";\n\nconst StyledDescriptionList = styled.dl`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    margin: 0;\n`;\nconst StyledKey = styled.dt`\n    margin: 0 0 0.25rem 0;\n`;\nconst StyledValue = styled.dd`\n    margin: 0;\n\n    &:not(:last-child) {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nexport default function DescriptionList({ children, ...props }) {\n    return (\n        <StyledDescriptionList {...props}>\n            {Object.entries(children).filter(([, description]) => !!description).map(([ title, description ]) => (\n                <Fragment key={title}>\n                    <StyledKey>\n                        <Title variant=\"section\">{title}</Title>\n                    </StyledKey>\n                    <StyledValue>{description}</StyledValue>\n                </Fragment>\n            ))}\n        </StyledDescriptionList>\n    );\n}\n","import {\n    faClosedCaptioning,\n    faComment,\n    faCompactDisc,\n    faEye,\n    faNotEqual,\n    faStream\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Tag from \"components/tag\";\nimport { Flex } from \"components/flex\";\n\nexport default function VideoTags({ video }) {\n    return (\n        <Flex flexWrap=\"wrap\" gapsBoth=\"0.75rem\">\n            <Tag title=\"Resolution\">\n                {video.resolution}p\n            </Tag>\n\n            {!!video.nc && (\n                <Tag icon={faNotEqual} title=\"No Credits\"/>\n            )}\n\n            {!!video.subbed && (\n                <Tag icon={faClosedCaptioning} title=\"With Subtitles\"/>\n            )}\n\n            {!!video.lyrics && (\n                <Tag icon={faComment} title=\"With Lyrics\"/>\n            )}\n\n            {!!video.uncen && (\n                <Tag icon={faEye} title=\"Uncensored\"/>\n            )}\n\n            {!!video.source && (\n                <Tag icon={faCompactDisc} title=\"Source\">\n                    {video.source.toUpperCase()}\n                </Tag>\n            )}\n\n            {video.overlap !== \"None\" && (\n                <Tag icon={faStream} title=\"Overlap\">\n                    {video.overlap.toUpperCase()}\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"components/card\";\n\nconst StyledCollapse = styled.div`\n    height: ${(props) => props.height};\n    overflow: hidden;\n    transition: height 250ms;\n`;\n\nexport default function CollapseCard({ children, ...props }) {\n    const [collapse, setCollapse] = useState(true);\n    const [height, setHeight] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        setHeight(ref.current.children[0].offsetHeight);\n    }, [collapse, children]);\n\n    return (\n        <Card hoverable onClick={() => setCollapse(!collapse)} {...props}>\n            <StyledCollapse ref={ref} height={height ? `${height}px` : \"auto\"}>\n                {children(collapse)}\n            </StyledCollapse>\n        </Card>\n    );\n}\n","import styled, {css} from \"styled-components\";\nimport { Flex } from \"components/flex\";\nimport Text from \"components/text\";\nimport {gapsColumn} from \"styles/mixins\";\nimport Card from \"components/card\";\n\nexport const StyledThemeCard = styled(Card)`\n    ${gapsColumn()}\n`;\n\nexport const StyledRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nexport const StyledSequence = styled(Text)`\n    flex: 0 0 2.5rem;\n\n    display: flex;\n\n    color: ${(props) => props.theme.colors.primaryTitle};\n\n    ${(props) => props.secondary && css`\n        color: ${(props) => props.theme.colors.primaryMediumEmphasis};\n\n        @media (max-width: 720px) {\n            align-self: flex-start;\n        }\n    `}\n`;\n\nexport const StyledHeader = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVersion = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n        align-items: flex-start;\n\n        ${gapsColumn()}\n    }\n`;\n\nexport const StyledVideoListContainer = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVideoList = styled(Flex).attrs({\n    flexWrap: \"wrap\",\n    gapsBoth: \"0.75rem\"\n})`\n    @media (min-width: 721px) {\n        justify-content: flex-end;\n    }\n`;\n","import React from \"react\";\nimport {\n    StyledHeader,\n    StyledRow,\n    StyledSequence,\n    StyledThemeCard,\n    StyledVersion,\n    StyledVideoList,\n    StyledVideoListContainer\n} from \"./style\";\nimport Elevator from \"components/elevator\";\nimport VideoButton from \"components/button/video\";\nimport SongTitleWithArtists from \"components/utils/songTitleWithArtists\";\nimport ThemeEntryTags from \"components/utils/themeEntryTags\";\nimport Text from \"components/text\";\n\nexport default function ThemeCard({ theme }) {\n    return (\n        <StyledThemeCard>\n            <Elevator>\n                <StyledRow>\n                    <StyledSequence small>{theme.slug}</StyledSequence>\n                    <StyledHeader>\n                        <Text bold>\n                            <SongTitleWithArtists song={theme.song}/>\n                        </Text>\n                    </StyledHeader>\n                </StyledRow>\n                {theme.entries.map(entry => (\n                    <StyledRow key={entry.version || 0}>\n                        <StyledSequence small secondary>{!!entry.version && `v${entry.version}`}</StyledSequence>\n                        <StyledVersion>\n                            <ThemeEntryTags entry={entry}/>\n                            {!!entry.videos && (\n                                <StyledVideoListContainer>\n                                    <StyledVideoList>\n                                        {entry.videos.map((video, index) => (\n                                            <VideoButton\n                                                key={index}\n                                                anime={theme.anime}\n                                                theme={theme}\n                                                entry={entry}\n                                                video={video}\n                                            />\n                                        ))}\n                                    </StyledVideoList>\n                                </StyledVideoListContainer>\n                            )}\n                        </StyledVersion>\n                    </StyledRow>\n                ))}\n            </Elevator>\n        </StyledThemeCard>\n    );\n}\n","import React, {useMemo, useState} from \"react\";\nimport ThemeCard from \"components/card/theme\";\nimport { Box } from \"components/flex\";\nimport Button from \"components/button\";\nimport Switcher from \"components/switcher\";\n\nexport default function ThemeSwitcher({ themes }) {\n    const groups = useMemo(() => themes.reduce((groups, theme) => {\n        const group = groups.find((group) => group.name === theme.group);\n        if (!group) {\n            groups.push({\n                name: theme.group,\n                themes: [theme],\n            });\n        } else {\n            group.themes.push(theme);\n        }\n        return groups;\n    }, []), [ themes ]);\n\n    const [activeGroup, setActiveGroup] = useState(groups[0]);\n\n    return (\n        <Box gapsColumn=\"1rem\">\n            {groups.length > 1 && (\n                <Switcher>\n                    {groups.map((group) => (\n                        <Button\n                            key={group.name}\n                            active={activeGroup === group}\n                            onClick={() => setActiveGroup(group)}\n                        >\n                            {group.name || \"Original\"}\n                        </Button>\n                    ))}\n                </Switcher>\n            )}\n            {activeGroup.themes.map((theme, index) => (\n                <ThemeCard key={index} theme={theme} />\n            ))}\n        </Box>\n    );\n}\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport ExternalLink from \"../components/externalLink\";\nimport DescriptionList from \"components/descriptionList\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport { Box } from \"components/flex\";\nimport ContainerSidebar from \"components/container/sidebar\";\nimport CollapseCard from \"components/card/collapse\";\nimport { fullWidth, gapsColumn } from \"styles/mixins\";\nimport ThemeSwitcher from \"components/switcher/theme\";\nimport SEO from \"components/seo\";\nimport useImage from \"hooks/useImage\";\n\nconst StyledAnimePage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledCover = styled.img(fullWidth);\nconst StyledList = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    ${gapsColumn(\"0.5rem\")}\n\n    text-align: center;\n`;\n\nexport default function AnimeDetailPage({ data: { anime } }) {\n    const { largeCover } = useImage(anime);\n\n    const sidebar = (\n        <Box gapsColumn=\"1.5rem\">\n            <StyledCover src={largeCover} alt=\"Cover\"/>\n            <DescriptionList>\n                {{\n                    \"Alternative Titles\": (\n                        !!anime.synonyms.length && (\n                            <StyledList>\n                                {anime.synonyms.map((synonym) => (\n                                    <Text key={synonym}>{synonym}</Text>\n                                ))}\n                            </StyledList>\n                        )\n                    ),\n                    \"Premiere\": (\n                        <Link to={`/year/${anime.year}${anime.season ? `/${anime.season.toLowerCase()}` : \"\"}`}>\n                            <Text link>\n                                {(anime.season ? anime.season + \" \" : \"\") + anime.year}\n                            </Text>\n                        </Link>\n                    ),\n                    \"Series\": (\n                        !!anime.series && !!anime.series.length && (\n                            <StyledList>\n                                {anime.series.map((series) =>\n                                    <Link key={series.slug} to={`/series/${series.slug}`}>\n                                        <Text link>\n                                            {series.name}\n                                        </Text>\n                                    </Link>\n                                )}\n                            </StyledList>\n                        )\n                    ),\n                    \"Links\": (\n                        !!anime.resources && !!anime.resources.length && (\n                            <StyledList>\n                                {anime.resources.map((resource) => (\n                                    <ExternalLink key={resource.link} href={resource.link}>\n                                        {resource.site}\n                                    </ExternalLink>\n                                ))}\n                            </StyledList>\n                        )\n                    )\n                }}\n            </DescriptionList>\n        </Box>\n    );\n\n    return (\n        <StyledAnimePage>\n            <SEO title={anime.name} />\n            <Title>{anime.name}</Title>\n            <ContainerSidebar sidebar={sidebar}>\n                <Box gapsColumn=\"1rem\">\n                    <Title variant=\"section\">Synopsis</Title>\n                    <CollapseCard>\n                        {(collapse) => (\n                            <Text maxLines={collapse ? 2 : null} dangerouslySetInnerHTML={{ __html: anime.synopsis }}/>\n                        )}\n                    </CollapseCard>\n                    <Title variant=\"section\">Themes</Title>\n                    {\n                        !!anime.themes && anime.themes.length\n                            ? <ThemeSwitcher themes={anime.themes}/>\n                            : <Text>There are no themes for this anime.</Text>\n                    }\n                </Box>\n            </ContainerSidebar>\n        </StyledAnimePage>\n    );\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        anime(slug: { eq: $slug }) {\n            name\n            year\n            season\n            synopsis\n            synonyms\n            series {\n                slug\n                name\n            }\n            themes {\n                group\n                slug\n                song {\n                    title\n                    performances {\n                        artist {\n                            slug\n                            name\n                        }\n                        as\n                    }\n                }\n                anime {\n                    slug\n                }\n                entries {\n                    episodes\n                    nsfw\n                    spoiler\n                    version\n                    videos {\n                        filename\n                        lyrics\n                        nc\n                        overlap\n                        resolution\n                        source\n                        subbed\n                        uncen\n                    }\n                }\n                ...VideoSlug\n            }\n            resources {\n                link\n                site\n            }\n            images {\n                facet\n                link\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircleNotch, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\nconst StyledBody = styled.div`\n    padding: 0.5rem;  \n`;\n\nexport default function ButtonPlay({ children, playing, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={playing ? faCircleNotch : faPlay} spin={playing} fixedWidth />\n            </StyledPrefix>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledButtonPlay>\n    );\n}\n","import {Fragment} from \"react\";\nimport {Link} from \"gatsby\";\nimport theme from \"theme\";\nimport Text from \"components/text\";\n\nexport default function SongTitleWithArtists({ song, songTitleLinkTo }) {\n    return (\n        <Text>\n            {songTitleLinkTo\n                ? (\n                    <Link to={songTitleLinkTo}>\n                        <Text link>{song.title}</Text>\n                    </Link>\n                )\n                : (\n                    <Text color={theme.colors.secondaryTitle}>{song.title}</Text>\n                )\n            }\n            {!!song.performances && !!song.performances.length && (\n                <>\n                    <Text small color={theme.colors.primaryMediumEmphasis}> by </Text>\n                    {song.performances.map((performance, index) => (\n                        <Fragment key={performance.artist.slug}>\n                            <Link to={`/artist/${performance.artist.slug}`}>\n                                <Text link>\n                                    {performance.as || performance.artist.name}\n                                </Text>\n                            </Link>\n                            {index < song.performances.length - 1 && (\n                                <Text small color={theme.colors.primaryMediumEmphasis}>\n                                    {index === song.performances.length - 2 ? \" & \" : \", \"}\n                                </Text>\n                            )}\n                        </Fragment>\n                    ))}\n                </>\n            )}\n        </Text>\n    );\n}\n","export default function useImage(resourceWithImages) {\n    const images = {};\n\n    if (resourceWithImages) {\n        for (const image of resourceWithImages.images) {\n            switch (image.facet) {\n                case \"Small Cover\":\n                    images.smallCover = image.link;\n                    break;\n                case \"Large Cover\":\n                    images.largeCover = image.link;\n                    break;\n                default:\n                // Ignore\n            }\n        }\n    }\n\n    return images;\n}\n","import ButtonPlay from \"components/button/play\";\nimport VideoTags from \"components/utils/videoTags\";\nimport {useContext} from \"react\";\nimport PlayerContext from \"context/playerContext\";\nimport createVideoSlug from \"utils/createVideoSlug\";\n\nexport default function VideoButton({ anime, theme, entry, video, ...props }) {\n    const { currentVideo } = useContext(PlayerContext);\n    const videoSlug = createVideoSlug(theme, entry, video);\n\n    return (\n        <ButtonPlay to={`/anime/${anime.slug}/${videoSlug}`} playing={currentVideo && currentVideo.filename === video.filename} {...props}>\n            <VideoTags video={video}/>\n        </ButtonPlay>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronCircleRight} from \"@fortawesome/free-solid-svg-icons\";\nimport Text from \"components/text\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledExternalLink = styled(Text).attrs({\n    forwardedAs: \"a\",\n    link: true\n})`\n    ${gapsRow(\"0.25rem\")}\n`;\n\nexport default function ExternalLink({ href, children, ...props }) {\n    return (\n        <StyledExternalLink href={href} target=\"_blank\" {...props}>\n            <span>{children}</span>\n            <FontAwesomeIcon icon={faChevronCircleRight}/>\n        </StyledExternalLink>\n    );\n}\n"],"sourceRoot":""}