{"version":3,"sources":["webpack:///./src/components/card/index.js","webpack:///./src/components/tag/index.js","webpack:///./src/components/text/index.js","webpack:///./src/components/switcher/index.js","webpack:///./src/components/container/sidebar.js","webpack:///./src/components/text/title.js","webpack:///./src/components/text/style.js","webpack:///./src/components/flex/index.js","webpack:///./src/components/utils/themeEntryTags.js","webpack:///./src/components/descriptionList/index.js","webpack:///./src/components/utils/videoTags.js","webpack:///./src/components/card/collapse.js","webpack:///./src/components/card/theme/style.js","webpack:///./src/components/card/theme/index.js","webpack:///./src/components/switcher/theme.js","webpack:///./src/templates/anime.js","webpack:///./src/components/button/play.js","webpack:///./src/components/utils/songTitleWithArtists.js","webpack:///./src/hooks/useImage.js","webpack:///./src/components/button/video.js","webpack:///./src/components/externalLink/index.js"],"names":["StyledCard","styled","div","props","theme","colors","secondaryTitle","primaryBackground","elevation","hoverable","css","Card","children","StyledTag","span","gapsRow","StyledTagIcon","FontAwesomeIcon","primaryLowEmphasis","warning","warningTitle","Tag","icon","iconProps","fixedWidth","small","color","primaryHighEmphasis","StyledText","StyledTextBase","Text","StyledSwitcher","elevatedPrimaryBackground","Switcher","StyledContainerSidebar","StyledSidebar","StyledBody","ContainerSidebar","sidebar","StyledTitlePage","attrs","as","primaryTitle","StyledTitleSection","Title","variant","code","link","bold","block","maxLines","propTypes","PropTypes","string","bool","number","StyledFlex","row","wrap","justifyContent","alignItems","gapsColumn","gapsBoth","StyledFlexItem","flex","alignSelf","justifySelf","Flex","FlexItem","ThemeEntryTags","entry","faFilm","episodes","spoiler","faBomb","nsfw","faExclamationTriangle","StyledDescriptionList","dl","StyledKey","dt","StyledValue","dd","DescriptionList","Object","entries","map","title","description","VideoTags","video","resolution","nc","faNotEqual","subbed","faClosedCaptioning","lyrics","faComment","uncen","faEye","source","faCompactDisc","toUpperCase","overlap","faStream","StyledCollapse","height","CollapseCard","useState","collapse","setCollapse","setHeight","ref","useRef","useEffect","current","offsetHeight","onClick","StyledThemeCard","StyledRow","StyledSequence","secondary","primaryMediumEmphasis","StyledHeader","StyledVersion","StyledVideoListContainer","StyledVideoList","ThemeCard","slug","song","version","videos","index","ThemeSwitcher","themes","groups","useMemo","reduce","group","find","name","push","activeGroup","setActiveGroup","length","active","StyledAnimePage","StyledCover","img","fullWidth","StyledList","AnimeDetailPage","anime","data","largeCover","useImage","src","alt","synonyms","synonym","to","year","season","toLowerCase","series","resources","resource","href","site","dangerouslySetInnerHTML","__html","synopsis","query","StyledButtonPlay","Button","StyledPrefix","secondaryBackground","ButtonPlay","playing","faCircleNotch","faPlay","spin","SongTitleWithArtists","performances","performance","artist","resourceWithImages","images","image","facet","smallCover","VideoButton","currentVideo","useContext","PlayerContext","filename","StyledExternalLink","forwardedAs","ExternalLink","target","faChevronCircleRight"],"mappings":"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","file":"component---src-templates-anime-js-bf3a3b5050fbbb8c4863.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\n\nconst StyledCard = styled.div`\n    padding: 1rem 1.5rem;\n    border-left: 4px solid ${(props) => props.theme.colors.secondaryTitle};\n    border-radius: 0 0.5rem 0.5rem 0;\n\n    background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation]};\n\n    ${(props) => props.hoverable && css`\n        cursor: pointer;\n\n        &:hover {\n            background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation + 1]};\n        }\n    `}\n`;\n\nexport default function Card({ children, ...props }) {\n    return (\n        <StyledCard {...props}>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {gapsRow} from \"styles/mixins\";\nimport Text from \"components/text\";\nimport theme from \"theme\";\n\nconst StyledTag = styled.span`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n\n    ${gapsRow(\"0.25rem\")}\n`;\nconst StyledTagIcon = styled(FontAwesomeIcon)`\n    color: ${(props) => props.theme.colors.primaryLowEmphasis};\n\n    ${(props) => props.warning && css`\n        color: ${(props) => props.theme.colors.warningTitle};\n    `}\n`;\n\nexport default function Tag({ icon, iconProps, warning, children, ...props }) {\n    return (\n        <StyledTag {...props}>\n            {!!icon && (\n                <StyledTagIcon icon={icon} fixedWidth warning={warning} {...iconProps}/>\n            )}\n            {!!children && (\n                <Text small color={theme.colors.primaryHighEmphasis}>\n                    {children}\n                </Text>\n            )}\n        </StyledTag>\n    );\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\nimport PropTypes from \"prop-types\";\n\nconst StyledText = styled(StyledTextBase)`\n    ${(props) => props.small && css`\n        font-size: 0.8rem;\n        font-weight: bold;\n    `}\n`;\n\nexport default function Text({ children, ...props }) {\n    return (\n        <StyledText {...props}>\n            {children}\n        </StyledText>\n    );\n}\n\nText.propTypes = {\n    ...StyledText.propTypes,\n    small: PropTypes.bool\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledSwitcher = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    background-color: ${elevatedPrimaryBackground};\n\n    border-radius: 1rem;\n\n    ${gapsRow(\"0.5rem\")}\n`;\n\nexport default function Switcher({ children, ...props }) {\n    return (\n        <StyledSwitcher {...props}>\n            {children}\n        </StyledSwitcher>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainerSidebar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n    }\n`;\nconst StyledSidebar = styled.div`\n    flex: 1;\n\n    @media (min-width: 721px) {\n        margin-right: 2rem;\n    }\n    @media (max-width: 720px) {\n        margin-bottom: 1.5rem;\n    }\n`;\nconst StyledBody = styled.div`\n    flex: 3;\n`;\n\nexport default function ContainerSidebar({ sidebar, children, ...props }) {\n    return (\n        <StyledContainerSidebar {...props}>\n            <StyledSidebar>\n                {sidebar}\n            </StyledSidebar>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledContainerSidebar>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\n\nconst StyledTitlePage = styled(StyledTextBase).attrs((props) => ({\n    as: \"h1\",\n    color: props.theme.colors.primaryTitle\n}))`\n    font-size: 2rem;\n    font-weight: bold;\n`;\nconst StyledTitleSection = styled(StyledTextBase).attrs((props) => ({\n    as: \"h2\",\n    color: props.theme.colors.primaryHighEmphasis\n}))`\n    font-size: 1rem;\n    font-weight: bold;\n    text-transform: uppercase;\n`;\n\nexport default function Title({ variant = \"page\", children, ...props }) {\n    switch (variant) {\n        case \"section\":\n            return (\n                <StyledTitleSection {...props}>\n                    {children}\n                </StyledTitleSection>\n            );\n        case \"page\":\n        default:\n            return (\n                <StyledTitlePage {...props}>\n                    {children}\n                </StyledTitlePage>\n            );\n    }\n}\n","import styled, { css } from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport PropTypes from \"prop-types\";\n\nexport const StyledTextBase = styled.span.attrs((props) => ({\n    as: props.as || (props.code ? \"code\" : \"span\")\n}))`\n    color: ${(props) => props.color || \"inherit\"};\n\n    ${(props) => props.link && css`\n        color: ${(props) => props.theme.colors.secondaryTitle};\n            \n        &:hover {\n            text-decoration: underline;\n        }\n    `}\n\n    ${(props) => props.bold && css`\n        font-weight: bold;\n    `}\n    \n    ${(props) => props.block && css`\n        display: block;\n    `}\n\n    ${(props) => props.maxLines && css`\n        display: -webkit-box;\n        -webkit-line-clamp: ${props.maxLines};\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    `}\n  \n    ${(props) => props.code && css`\n        font-family: monospace;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n        background-color: ${elevatedPrimaryBackground};\n        line-height: 1.5rem;\n    `}\n\n    margin: 0;\n`;\n\nStyledTextBase.propTypes = {\n    color: PropTypes.string,\n    link: PropTypes.bool,\n    block: PropTypes.bool,\n    maxLines: PropTypes.number,\n    code: PropTypes.bool\n};\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {gapsColumn, gapsRow} from \"styles/mixins\";\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.row ? \"row\" : \"column\"};\n    flex-wrap: ${(props) => props.wrap ? \"wrap\" : \"nowrap\"};\n    justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n    align-items: ${(props) => props.alignItems || \"stretch\"};\n\n    ${(props) => props.gapsRow && gapsRow(props.gapsRow)}\n    ${(props) => props.gapsColumn && gapsColumn(props.gapsColumn)}\n    ${(props) => props.gapsBoth && css`\n        // Hack to have gutters between items without an outer margin\n        margin: calc(${props.gapsBoth} / -2);\n\n        & > * {\n            margin: calc(${props.gapsBoth} / 2);\n        }\n    `}\n`;\nconst StyledFlexItem = styled.div`\n    flex: ${(props) => props.flex || \"0 0 auto\"};\n    align-self: ${(props) => props.alignSelf || \"auto\"};\n    justify-self: ${(props) => props.justifySelf || \"auto\"};\n`;\n\nexport default function Flex({ children, ...props }) {\n    return (\n        <StyledFlex {...props}>\n            {children}\n        </StyledFlex>\n    );\n}\n\nexport function FlexItem({ children, ...props }) {\n    return (\n        <StyledFlexItem {...props}>\n            {children}\n        </StyledFlexItem>\n    );\n}\n","import Tag from \"components/tag\";\nimport {faBomb, faExclamationTriangle, faFilm} from \"@fortawesome/free-solid-svg-icons\";\nimport Flex from \"components/flex\";\nimport React from \"react\";\n\nexport default function ThemeEntryTags({ entry }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag icon={faFilm}>\n                {entry.episodes || \"—\"}\n            </Tag>\n            {!!entry.spoiler && (\n                <Tag icon={faBomb} warning>\n                    SPOILER\n                </Tag>\n            )}\n            {!!entry.nsfw && (\n                <Tag icon={faExclamationTriangle} warning>\n                    NSFW\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import Title from \"components/text/title\";\nimport styled from \"styled-components\";\n\nconst StyledDescriptionList = styled.dl`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    margin: 0;\n`;\nconst StyledKey = styled.dt`\n    margin: 0 0 0.25rem 0;\n`;\nconst StyledValue = styled.dd`\n    margin: 0;\n\n    &:not(:last-child) {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nexport default function DescriptionList({ children, ...props }) {\n    return (\n        <StyledDescriptionList {...props}>\n            {Object.entries(children).map(([ title, description ]) => (\n                !!description && (\n                    <>\n                        <StyledKey>\n                            <Title variant=\"section\">{title}</Title>\n                        </StyledKey>\n                        <StyledValue>{description}</StyledValue>\n                    </>\n                )\n            ))}\n        </StyledDescriptionList>\n    );\n}\n","import {\n    faClosedCaptioning,\n    faComment,\n    faCompactDisc,\n    faEye,\n    faNotEqual,\n    faStream\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Tag from \"components/tag\";\nimport Flex from \"components/flex\";\n\nexport default function VideoTags({ video }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag title=\"Resolution\">\n                {video.resolution}p\n            </Tag>\n\n            {!!video.nc && (\n                <Tag icon={faNotEqual} title=\"No Credits\"/>\n            )}\n\n            {!!video.subbed && (\n                <Tag icon={faClosedCaptioning} title=\"With Subtitles\"/>\n            )}\n\n            {!!video.lyrics && (\n                <Tag icon={faComment} title=\"With Lyrics\"/>\n            )}\n\n            {!!video.uncen && (\n                <Tag icon={faEye} title=\"Uncensored\"/>\n            )}\n\n            {!!video.source && (\n                <Tag icon={faCompactDisc} title=\"Source\">\n                    {video.source.toUpperCase()}\n                </Tag>\n            )}\n\n            {video.overlap !== \"None\" && (\n                <Tag icon={faStream} title=\"Overlap\">\n                    {video.overlap.toUpperCase()}\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"components/card\";\n\nconst StyledCollapse = styled.div`\n    height: ${(props) => props.height};\n    overflow: hidden;\n    transition: height 250ms;\n`;\n\nexport default function CollapseCard({ children, ...props }) {\n    const [collapse, setCollapse] = useState(true);\n    const [height, setHeight] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        setHeight(ref.current.children[0].offsetHeight);\n    }, [collapse, children]);\n\n    return (\n        <Card hoverable onClick={() => setCollapse(!collapse)} {...props}>\n            <StyledCollapse ref={ref} height={height ? `${height}px` : \"auto\"}>\n                {children(collapse)}\n            </StyledCollapse>\n        </Card>\n    );\n}\n","import styled, {css} from \"styled-components\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport {gapsColumn} from \"styles/mixins\";\nimport Card from \"components/card\";\n\nexport const StyledThemeCard = styled(Card)`\n    ${gapsColumn()}\n`;\n\nexport const StyledRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nexport const StyledSequence = styled(Text)`\n    flex: 0 0 2.5rem;\n\n    display: flex;\n\n    color: ${(props) => props.theme.colors.primaryTitle};\n\n    ${(props) => props.secondary && css`\n        color: ${(props) => props.theme.colors.primaryMediumEmphasis};\n\n        @media (max-width: 720px) {\n            align-self: flex-start;\n        }\n    `}\n`;\n\nexport const StyledHeader = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVersion = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n        align-items: flex-start;\n\n        ${gapsColumn()}\n    }\n`;\n\nexport const StyledVideoListContainer = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVideoList = styled(Flex).attrs({\n    row: true,\n    wrap: true,\n    gapsBoth: \"0.75rem\"\n})`\n    @media (min-width: 721px) {\n        justify-content: flex-end;\n    }\n`;\n","import React from \"react\";\nimport {\n    StyledHeader,\n    StyledRow,\n    StyledSequence,\n    StyledThemeCard,\n    StyledVersion,\n    StyledVideoList,\n    StyledVideoListContainer\n} from \"./style\";\nimport Elevator from \"components/elevator\";\nimport VideoButton from \"components/button/video\";\nimport SongTitleWithArtists from \"components/utils/songTitleWithArtists\";\nimport ThemeEntryTags from \"components/utils/themeEntryTags\";\nimport Text from \"components/text\";\n\nexport default function ThemeCard({ theme }) {\n    return (\n        <StyledThemeCard>\n            <Elevator>\n                <StyledRow>\n                    <StyledSequence small>{theme.slug}</StyledSequence>\n                    <StyledHeader>\n                        <Text bold>\n                            <SongTitleWithArtists song={theme.song}/>\n                        </Text>\n                    </StyledHeader>\n                </StyledRow>\n                {theme.entries.map(entry => (\n                    <StyledRow key={entry.version || 0}>\n                        <StyledSequence small secondary>{!!entry.version && `v${entry.version}`}</StyledSequence>\n                        <StyledVersion>\n                            <ThemeEntryTags entry={entry}/>\n                            {!!entry.videos && (\n                                <StyledVideoListContainer>\n                                    <StyledVideoList>\n                                        {entry.videos.map((video, index) => (\n                                            <VideoButton key={index} video={video}/>\n                                        ))}\n                                    </StyledVideoList>\n                                </StyledVideoListContainer>\n                            )}\n                        </StyledVersion>\n                    </StyledRow>\n                ))}\n            </Elevator>\n        </StyledThemeCard>\n    );\n}\n","import React, {useMemo, useState} from \"react\";\nimport ThemeCard from \"components/card/theme\";\nimport Flex, {FlexItem} from \"components/flex\";\nimport Button from \"components/button\";\nimport Switcher from \"components/switcher\";\n\nexport default function ThemeSwitcher({ themes }) {\n    const groups = useMemo(() => themes.reduce((groups, theme) => {\n        const group = groups.find((group) => group.name === theme.group);\n        if (!group) {\n            groups.push({\n                name: theme.group,\n                themes: [theme],\n            });\n        } else {\n            group.themes.push(theme);\n        }\n        return groups;\n    }, []), [ themes ]);\n\n    const [activeGroup, setActiveGroup] = useState(groups[0]);\n\n    return (\n        <Flex gapsColumn=\"1rem\">\n            {groups.length > 1 && (\n                <FlexItem alignSelf=\"flex-start\">\n                    <Switcher>\n                        {groups.map((group) => (\n                            <Button\n                                key={group.name}\n                                active={activeGroup === group}\n                                onClick={() => setActiveGroup(group)}\n                            >\n                                {group.name || \"Original\"}\n                            </Button>\n                        ))}\n                    </Switcher>\n                </FlexItem>\n            )}\n            {activeGroup.themes.map((theme, index) => (\n                <ThemeCard key={index} theme={theme} />\n            ))}\n        </Flex>\n    );\n}\n","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport styled from \"styled-components\";\nimport ExternalLink from \"../components/externalLink\";\nimport DescriptionList from \"components/descriptionList\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport Flex from \"components/flex\";\nimport ContainerSidebar from \"components/container/sidebar\";\nimport CollapseCard from \"components/card/collapse\";\nimport { fullWidth, gapsColumn } from \"styles/mixins\";\nimport ThemeSwitcher from \"components/switcher/theme\";\nimport SEO from \"components/seo\";\nimport useImage from \"hooks/useImage\";\n\nconst StyledAnimePage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledCover = styled.img(fullWidth);\nconst StyledList = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    ${gapsColumn(\"0.5rem\")}\n\n    text-align: center;\n`;\n\nexport default function AnimeDetailPage({ data: { anime } }) {\n    const { largeCover } = useImage(anime);\n\n    const sidebar = (\n        <Flex gapsColumn=\"1.5rem\">\n            <StyledCover src={largeCover} alt=\"Cover\"/>\n            <DescriptionList>\n                {{\n                    \"Alternative Titles\": (\n                        !!anime.synonyms.length && (\n                            <StyledList>\n                                {anime.synonyms.map((synonym) => (\n                                    <Text key={synonym}>{synonym}</Text>\n                                ))}\n                            </StyledList>\n                        )\n                    ),\n                    \"Premiere\": (\n                        <Link to={`/year/${anime.year}${anime.season ? `/${anime.season.toLowerCase()}` : \"\"}`}>\n                            <Text link>\n                                {(anime.season ? anime.season + \" \" : \"\") + anime.year}\n                            </Text>\n                        </Link>\n                    ),\n                    \"Series\": (\n                        !!anime.series && !!anime.series.length && (\n                            <StyledList>\n                                {anime.series.map((series) =>\n                                    <Link to={`/series/${series.slug}`}>\n                                        <Text link>\n                                            {series.name}\n                                        </Text>\n                                    </Link>\n                                )}\n                            </StyledList>\n                        )\n                    ),\n                    \"Links\": (\n                        !!anime.resources && !!anime.resources.length && (\n                            <StyledList>\n                                {anime.resources.map((resource) => (\n                                    <ExternalLink key={resource.link} href={resource.link}>\n                                        {resource.site}\n                                    </ExternalLink>\n                                ))}\n                            </StyledList>\n                        )\n                    )\n                }}\n            </DescriptionList>\n        </Flex>\n    );\n\n    return (\n        <StyledAnimePage>\n            <SEO title={anime.name} />\n            <Title>{anime.name}</Title>\n            <ContainerSidebar sidebar={sidebar}>\n                <Flex gapsColumn=\"1rem\">\n                    <Title variant=\"section\">Synopsis</Title>\n                    <CollapseCard>\n                        {(collapse) => (\n                            <Text maxLines={collapse ? 2 : null} dangerouslySetInnerHTML={{ __html: anime.synopsis }}/>\n                        )}\n                    </CollapseCard>\n                    <Title variant=\"section\">Themes</Title>\n                    {\n                        !!anime.themes && anime.themes.length\n                            ? <ThemeSwitcher themes={anime.themes}/>\n                            : <Text>There are no themes for this anime.</Text>\n                    }\n                </Flex>\n            </ContainerSidebar>\n        </StyledAnimePage>\n    );\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        anime(slug: { eq: $slug }) {\n            name\n            year\n            season\n            synopsis\n            synonyms\n            series {\n                slug\n                name\n            }\n            themes {\n                group\n                slug\n                song {\n                    title\n                    performances {\n                        artist {\n                            slug\n                            name\n                        }\n                        as\n                    }\n                }\n                entries {\n                    episodes\n                    nsfw\n                    spoiler\n                    version\n                    videos {\n                        filename\n                        lyrics\n                        nc\n                        overlap\n                        resolution\n                        source\n                        subbed\n                        uncen\n                    }\n                }\n            }\n            resources {\n                link\n                site\n            }\n            images {\n                facet\n                link\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircleNotch, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\nconst StyledBody = styled.div`\n    padding: 0.5rem;  \n`;\n\nexport default function ButtonPlay({ children, playing, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={playing ? faCircleNotch : faPlay} spin={playing} fixedWidth />\n            </StyledPrefix>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledButtonPlay>\n    );\n}\n","import Text from \"components/text\";\nimport {Link} from \"gatsby\";\nimport theme from \"theme\";\n\nexport default function SongTitleWithArtists({ song }) {\n    return (\n        <>\n            <Text color={theme.colors.secondaryTitle}>{song.title}</Text>\n            {!!song.performances && !!song.performances.length && (\n                <>\n                    <Text small color={theme.colors.primaryMediumEmphasis}> by </Text>\n                    {song.performances.map((performance, index) => (\n                        <>\n                            <Link to={`/artist/${performance.artist.slug}`}>\n                                <Text key={performance.as || performance.artist.name} link>\n                                    {performance.as || performance.artist.name}\n                                </Text>\n                            </Link>\n                            {index < song.performances.length - 1 && (\n                                <Text small color={theme.colors.primaryMediumEmphasis}>\n                                    {index === song.performances.length - 2 ? \" & \" : \", \"}\n                                </Text>\n                            )}\n                        </>\n                    ))}\n                </>\n            )}\n        </>\n    );\n}\n","export default function useImage(resourceWithImages) {\n    const images = {};\n\n    if (resourceWithImages) {\n        for (const image of resourceWithImages.images) {\n            switch (image.facet) {\n                case \"Small Cover\":\n                    images.smallCover = image.link;\n                    break;\n                case \"Large Cover\":\n                    images.largeCover = image.link;\n                    break;\n                default:\n                // Ignore\n            }\n        }\n    }\n\n    return images;\n}\n","import ButtonPlay from \"components/button/play\";\nimport VideoTags from \"components/utils/videoTags\";\nimport {useContext} from \"react\";\nimport PlayerContext from \"context/playerContext\";\n\nexport default function VideoButton({ video, ...props }) {\n    const { currentVideo } = useContext(PlayerContext);\n\n    return (\n        <ButtonPlay to={`/video/${video.filename}`} playing={currentVideo && currentVideo.filename === video.filename} {...props}>\n            <VideoTags video={video}/>\n        </ButtonPlay>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronCircleRight} from \"@fortawesome/free-solid-svg-icons\";\nimport Text from \"components/text\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledExternalLink = styled(Text).attrs({\n    forwardedAs: \"a\",\n    link: true\n})`\n    ${gapsRow(\"0.25rem\")}\n`;\n\nexport default function ExternalLink({ href, children, ...props }) {\n    return (\n        <StyledExternalLink href={href} target=\"_blank\" {...props}>\n            <span>{children}</span>\n            <FontAwesomeIcon icon={faChevronCircleRight}/>\n        </StyledExternalLink>\n    );\n}\n"],"sourceRoot":""}