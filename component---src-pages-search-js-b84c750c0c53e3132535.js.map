{"version":3,"sources":["webpack:///./src/components/card/searchResult/theme.js","webpack:///./src/hooks/useAnime.js","webpack:///./src/components/switcher/index.js","webpack:///./node_modules/use-debounce/esm/useDebounce.js","webpack:///./node_modules/use-debounce/esm/useDebouncedCallback.js","webpack:///./src/hooks/useSearch.js","webpack:///./src/components/search/global.js","webpack:///./src/pages/search.js","webpack:///./src/components/card/searchResult/index.js","webpack:///./plugins/gatsby-source-animethemes/src/utils/withCache.js","webpack:///./src/components/card/searchResult/anime.js","webpack:///./src/components/button/play.js","webpack:///./plugins/gatsby-source-animethemes/src/index.js","webpack:///./src/components/card/searchResult/artist.js","webpack:///./src/components/utils/songTitleWithArtists.js","webpack:///./node_modules/node-fetch/browser.js","webpack:///./src/hooks/useAniListArtist.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["ThemeSearchResultCard","slug","theme","anime","useSWR","baseUrl","url","fetch","then","res","json","data","image","useAniList","entries","videos","title","song","description","to","link","name","filename","StyledSwitcher","styled","div","elevatedPrimaryBackground","gapsRow","Switcher","children","props","valueEquality","left","right","useDebounce","value","delay","options","eq","equalityFn","_a","state","dispatch","_b","callback","maxWait","maxWaitHandler","maxWaitArgs","leading","trailing","undefined","leadingCall","functionTimeoutHandler","isComponentUnmounted","debouncedFunction","current","cancelDebouncedCallback","clearTimeout","debouncedCallback","args","_i","arguments","length","apply","setTimeout","shouldCallFunction","callPending","useDebouncedCallback","cancel","previousValue","fields","emptyResults","animeResults","themeResults","artistResults","fetchSearchResults","a","themes","artists","performances","map","artist","as","GlobalSearch","searchQuery","searchEntity","query","join","encodeURIComponent","results","isValidating","stickyResults","useRef","useSearch","isSearching","block","gapsColumn","EntitySearch","entity","useLocation","urlSuffix","search","hash","totalResults","slice","resultCards","result","id","variant","row","justifyContent","icon","faChevronDown","fixedWidth","StyledSearchPage","StyledSearchOptions","Flex","SearchPage","location","pathname","useMemo","match","urlParams","URLSearchParams","useState","get","setSearchQuery","debouncedSearchQuery","useEffect","newUrlParams","set","params","toString","navigate","replace","flex","setQuery","faTimes","active","StyledSearchResultCard","Card","StyledCover","img","StyledBody","StyledChildren","SearchResultCard","card","alt","src","maxLines","small","cache","Map","module","exports","key","init","has","AnimeSearchResultCard","hideThemes","premiere","year","premiereLink","season","toLowerCase","wrap","gapsBoth","filter","faEllipsisH","StyledButtonPlay","Button","StyledPrefix","colors","secondaryBackground","primaryBackground","ButtonPlay","playing","faCircleNotch","faPlay","spin","require","withCache","process","GATSBY_API_URL","response","fetchJsonCached","createFieldParams","Object","ArtistSearchResultCard","useAniListArtist","SongTitleWithArtists","performance","index","global","self","window","Error","getGlobal","default","bind","Headers","Request","Response","setImage","isCanceled","fetchAniListArtist","aniListArtist","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","fn","this","err"],"mappings":"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","file":"component---src-pages-search-js-b84c750c0c53e3132535.js","sourcesContent":["import {Link} from \"gatsby\";\nimport useAniList from \"hooks/useAniList\";\nimport SearchResultCard from \"components/card/searchResult\";\nimport SongTitleWithArtists from \"components/utils/songTitleWithArtists\";\nimport useAnime from \"hooks/useAnime\";\nimport Text from \"components/text\";\n\nexport default function ThemeSearchResultCard({ theme }) {\n    const anime = useAnime(theme.anime.slug);\n    const { image } = useAniList(anime);\n\n    if (!theme.entries[0] || !theme.entries[0].videos[0]) {\n        return null;\n    }\n\n    return (\n        <SearchResultCard\n            title={<SongTitleWithArtists song={theme.song}/>}\n            description={<>\n                <span>Theme • {theme.slug} • </span>\n                <Link to={`/anime/${theme.anime.slug}`}>\n                    <Text link>{theme.anime.name}</Text>\n                </Link>\n            </>}\n            image={image}\n            to={`/video/${theme.entries[0].videos[0].filename}`}\n        />\n    );\n}\n","// TODO: This will be obsolete when cover images are provided with anime.\n\nimport useSWR from \"swr\";\nimport {baseUrl} from \"../../plugins/gatsby-source-animethemes/src/index\";\n\nexport default function useAnime(slug) {\n    const { data: anime } = useSWR(\n        `${baseUrl}/api/anime/${slug}`,\n        (url) => fetch(url).then((res) => res.json())\n    );\n\n    return anime;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledSwitcher = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    background-color: ${elevatedPrimaryBackground};\n\n    border-radius: 1rem;\n\n    ${gapsRow(\"0.5rem\")}\n`;\n\nexport default function Switcher({ children, ...props }) {\n    return (\n        <StyledSwitcher {...props}>\n            {children}\n        </StyledSwitcher>\n    );\n}\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useDebouncedCallback from './useDebouncedCallback';\n\nfunction valueEquality(left, right) {\n  return left === right;\n}\n\nexport default function useDebounce(value, delay, options) {\n  var eq = options && options.equalityFn ? options.equalityFn : valueEquality;\n\n  var _a = useState(value),\n      state = _a[0],\n      dispatch = _a[1];\n\n  var _b = useDebouncedCallback(useCallback(function (value) {\n    return dispatch(value);\n  }, []), delay, options),\n      callback = _b[0],\n      cancel = _b[1],\n      callPending = _b[2];\n\n  var previousValue = useRef(value);\n  useEffect(function () {\n    // We need to use this condition otherwise we will run debounce timer for the first render (including maxWait option)\n    if (!eq(previousValue.current, value)) {\n      callback(value);\n      previousValue.current = value;\n    }\n  }, [value, callback, eq]);\n  return [state, cancel, callPending];\n}","import { useRef, useCallback, useEffect } from 'react';\nexport default function useDebouncedCallback(callback, delay, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var maxWait = options.maxWait;\n  var maxWaitHandler = useRef(null);\n  var maxWaitArgs = useRef([]);\n  var leading = options.leading;\n  var trailing = options.trailing === undefined ? true : options.trailing;\n  var leadingCall = useRef(false);\n  var functionTimeoutHandler = useRef(null);\n  var isComponentUnmounted = useRef(false);\n  var debouncedFunction = useRef(callback);\n  debouncedFunction.current = callback;\n  var cancelDebouncedCallback = useCallback(function () {\n    clearTimeout(functionTimeoutHandler.current);\n    clearTimeout(maxWaitHandler.current);\n    maxWaitHandler.current = null;\n    maxWaitArgs.current = [];\n    functionTimeoutHandler.current = null;\n    leadingCall.current = false;\n  }, []);\n  useEffect(function () {\n    // We have to set isComponentUnmounted to be truth, as fast-refresh runs all useEffects\n    isComponentUnmounted.current = false;\n    return function () {\n      // we use flag, as we allow to call callPending outside the hook\n      isComponentUnmounted.current = true;\n    };\n  }, []);\n  var debouncedCallback = useCallback(function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    maxWaitArgs.current = args;\n    clearTimeout(functionTimeoutHandler.current);\n\n    if (leadingCall.current) {\n      leadingCall.current = false;\n    }\n\n    if (!functionTimeoutHandler.current && leading && !leadingCall.current) {\n      debouncedFunction.current.apply(debouncedFunction, args);\n      leadingCall.current = true;\n    }\n\n    functionTimeoutHandler.current = setTimeout(function () {\n      var shouldCallFunction = true;\n\n      if (leading && leadingCall.current) {\n        shouldCallFunction = false;\n      }\n\n      cancelDebouncedCallback();\n\n      if (!isComponentUnmounted.current && trailing && shouldCallFunction) {\n        debouncedFunction.current.apply(debouncedFunction, args);\n      }\n    }, delay);\n\n    if (maxWait && !maxWaitHandler.current && trailing) {\n      maxWaitHandler.current = setTimeout(function () {\n        var args = maxWaitArgs.current;\n        cancelDebouncedCallback();\n\n        if (!isComponentUnmounted.current) {\n          debouncedFunction.current.apply(null, args);\n        }\n      }, maxWait);\n    }\n  }, [maxWait, delay, cancelDebouncedCallback, leading, trailing]);\n  var callPending = useCallback(function () {\n    // Call pending callback only if we have anything in our queue\n    if (!functionTimeoutHandler.current) {\n      return;\n    }\n\n    debouncedFunction.current.apply(null, maxWaitArgs.current);\n    cancelDebouncedCallback();\n  }, [cancelDebouncedCallback]); // At the moment, we use 3 args array so that we save backward compatibility\n\n  return [debouncedCallback, cancelDebouncedCallback, callPending];\n}","import {useRef} from \"react\";\nimport useSWR from \"swr\";\nimport {baseUrl} from \"../../plugins/gatsby-source-animethemes/src/index\";\n\nconst fields = [ \"anime\", \"themes\", \"artists\" ];\nconst emptyResults = {\n    animeResults: [],\n    themeResults: [],\n    artistResults: []\n};\n\nexport default function useSearch(query) {\n    const { data: results, isValidating } = useSWR(\n        `${baseUrl}/api/search?fields=${fields.join()}&q=${encodeURIComponent(query)}`,\n        fetchSearchResults\n    );\n\n    const stickyResults = useRef(emptyResults);\n    if (!query) {\n        stickyResults.current = emptyResults;\n    } else if (results !== undefined) {\n        stickyResults.current = results;\n    }\n\n    return [ stickyResults.current, isValidating ];\n}\n\nasync function fetchSearchResults(url) {\n    const res = await fetch(url);\n    const { anime, themes, artists } = await res.json();\n\n    // Map artist to performances to comply with the application schema\n    for (const theme of themes) {\n        theme.song.performances = theme.song.artists.map((artist) => ({\n            artist,\n            as: artist.as\n        }));\n    }\n\n    return {\n        animeResults: anime,\n        themeResults: themes,\n        artistResults: artists\n    };\n}\n","import React from \"react\";\nimport {useLocation} from \"@reach/router\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronDown} from \"@fortawesome/free-solid-svg-icons\";\nimport useSearch from \"hooks/useSearch\";\nimport AnimeSearchResultCard from \"components/card/searchResult/anime\";\nimport ThemeSearchResultCard from \"components/card/searchResult/theme\";\nimport Button from \"components/button\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport ArtistSearchResultCard from \"components/card/searchResult/artist\";\nimport Flex from \"components/flex\";\n\nexport default function GlobalSearch({ searchQuery, searchEntity }) {\n    const [ results, isSearching ] = useSearch(searchQuery);\n\n    if (!searchQuery) {\n        return (\n            <Text block>Type in a query to begin searching.</Text>\n        );\n    }\n\n    const {animeResults, themeResults, artistResults} = results;\n    const totalResults = animeResults.length + themeResults.length + artistResults.length;\n\n    if (!totalResults) {\n        if (isSearching) {\n            return (\n                <Text block>Searching...</Text>\n            );\n        }\n\n        return (\n            <Text block>No results found for query \"{searchQuery}\". Did you spell it correctly?</Text>\n        );\n    }\n\n    return (\n        <Flex gapsColumn=\"2rem\">\n            <EntitySearch searchEntity={searchEntity} entity=\"anime\" title=\"Anime\" results={animeResults}/>\n            <EntitySearch searchEntity={searchEntity} entity=\"theme\" title=\"Themes\" results={themeResults}/>\n            <EntitySearch searchEntity={searchEntity} entity=\"artist\" title=\"Artist\" results={artistResults}/>\n        </Flex>\n    );\n}\n\nfunction EntitySearch({ searchEntity, entity, title, results }) {\n    const { search, hash } = useLocation();\n    const urlSuffix = search + hash;\n    const totalResults = results.length;\n\n    if ((searchEntity && searchEntity !== entity) || !results.length) {\n        return null;\n    }\n\n    // If no entity is selected, just show a preview with 3 results\n    if (!searchEntity) {\n        results = results.slice(0, 3);\n    }\n\n    let resultCards = results.map((result) => {\n        switch (entity) {\n            case \"anime\":\n                return <AnimeSearchResultCard key={result.id} anime={result}/>;\n            case \"theme\":\n                return <ThemeSearchResultCard key={result.id} theme={result}/>;\n            case \"artist\":\n                return <ArtistSearchResultCard key={result.id} artist={result}/>;\n            default:\n                return null;\n        }\n    });\n\n    return (\n        <Flex gapsColumn=\"1rem\">\n            {!searchEntity && (\n                <Title variant=\"section\">{title}</Title>\n            )}\n            {resultCards}\n            {!searchEntity && totalResults > 3 && (\n                <Flex row justifyContent=\"center\">\n                    <Button to={`/search/${entity}${urlSuffix}`} icon>\n                        <FontAwesomeIcon icon={faChevronDown} fixedWidth/>\n                    </Button>\n                </Flex>\n            )}\n        </Flex>\n    );\n}\n","import {useEffect, useMemo, useState} from \"react\";\nimport styled from \"styled-components\";\nimport {navigate} from \"gatsby\";\nimport {useDebounce} from \"use-debounce\";\nimport SearchInput from \"components/input/search\";\nimport GlobalSearch from \"components/search/global\";\nimport {gapsColumn, gapsRow} from \"styles/mixins\";\nimport Title from \"components/text/title\";\nimport Flex, {FlexItem} from \"components/flex\";\nimport Switcher from \"components/switcher\";\nimport Button from \"components/button\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from \"@fortawesome/free-solid-svg-icons\";\n\nconst StyledSearchPage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledSearchOptions = styled(Flex)`\n    @media (min-width: 721px) {\n        flex-direction: row;\n        ${gapsRow(\"1rem\")}\n    }\n    @media (max-width: 720px) {\n        flex-direction: column;\n        align-items: center;\n        ${gapsColumn(\"1rem\")}\n    }\n`;\n\nexport default function SearchPage({ location: { pathname, search, hash } }) {\n    const entity = useMemo(() => pathname.match(/\\/search(?:\\/(.+))?/)[1], [ pathname ]);\n    const urlParams = useMemo(() => new URLSearchParams(search), [ search ]);\n    const urlSuffix = search + hash;\n\n    const [ searchQuery, setSearchQuery ] = useState(urlParams.get(\"q\") || \"\");\n    const [ debouncedSearchQuery ] = useDebounce(searchQuery, 500);\n\n    // Temporary effect to listen for changes to the search query that may be made by the quick search (WIP)\n    useEffect(() => { setSearchQuery(urlParams.get(\"q\")) }, [ urlParams ]);\n\n    useEffect(() => {\n        // Update URL to maintain the searchQuery on page navigation.\n        const newUrlParams = new URLSearchParams();\n        if (searchQuery) {\n            newUrlParams.set(\"q\", searchQuery);\n        }\n        const params = newUrlParams.toString();\n\n        let url = \"/search\";\n        if (entity) {\n            url += `/${entity}`;\n        }\n        if (params) {\n            url += `?${params}`;\n        }\n\n        navigate(url, { replace: true });\n    }, [ entity, searchQuery ]);\n\n    return (\n        <StyledSearchPage>\n            <Title>Search</Title>\n            <StyledSearchOptions>\n                <FlexItem flex={1}>\n                    <SearchInput query={searchQuery} setQuery={setSearchQuery} isSearching={false}/>\n                </FlexItem>\n                <Switcher>\n                    {!!entity && (\n                        <Button icon to={`/search${urlSuffix}`}>\n                            <FontAwesomeIcon icon={faTimes} fixedWidth/>\n                        </Button>\n                    )}\n                    <Button to={`/search/anime${urlSuffix}`} active={entity === \"anime\"}>Anime</Button>\n                    <Button to={`/search/theme${urlSuffix}`} active={entity === \"theme\"}>Themes</Button>\n                    <Button to={`/search/artist${urlSuffix}`} active={entity === \"artist\"}>Artists</Button>\n                </Switcher>\n            </StyledSearchOptions>\n            <GlobalSearch searchEntity={entity} searchQuery={debouncedSearchQuery}/>\n        </StyledSearchPage>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport styled from \"styled-components\";\nimport Card from \"components/card/index\";\nimport {gapsColumn} from \"styles/mixins\";\n\nconst StyledSearchResultCard = styled(Card)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: 0 1rem 0 0;\n`;\nconst StyledCover = styled.img`\n    width: 48px;\n    height: 64px;\n    object-fit: cover;\n`;\nconst StyledBody = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  \n    ${gapsColumn(\"0.25rem\")}  \n  \n    padding: 0 1rem;\n`;\nconst StyledChildren = styled.div`\n    @media (max-width: 720px) {\n        display: none;\n    }\n`;\n\nexport default function SearchResultCard({ title, description, image, to, children, ...props }) {\n    const card = (\n        <StyledSearchResultCard {...props}>\n            <StyledCover alt=\"Cover\" src={image}/>\n            <StyledBody>\n                <Title variant=\"card\" maxLines={2}>{title}</Title>\n                <Text small maxLines={1}>{description}</Text>\n            </StyledBody>\n            <StyledChildren>\n                {children}\n            </StyledChildren>\n        </StyledSearchResultCard>\n    );\n\n    if (to) {\n        return (\n            <Link to={to}>\n                {card}\n            </Link>\n        );\n    }\n\n    return card;\n}\n","const cache = new Map();\n\nfunction withCache(key, init) {\n    if (!cache.has(key)) {\n        cache.set(key, init(key));\n    }\n\n    return cache.get(key);\n}\n\nmodule.exports = withCache;\n","import {Link} from \"gatsby\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEllipsisH} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport useAniList from \"hooks/useAniList\";\nimport SearchResultCard from \"components/card/searchResult\";\nimport Elevator from \"components/elevator\";\nimport ButtonPlay from \"components/button/play\";\n\nexport default function AnimeSearchResultCard({ anime, hideThemes = false }) {\n    const { image } = useAniList(anime);\n\n    let premiere = anime.year;\n    let premiereLink = `/year/${anime.year}`;\n    if (anime.season) {\n        premiere = anime.season + \" \" + premiere;\n        premiereLink += `/${anime.season.toLowerCase()}`;\n    }\n\n    let description = (\n        <>\n            <span>Anime</span>\n            {!!premiere && (\n                <>\n                    <span> • </span>\n                    <Link to={premiereLink}>\n                        <Text link>{premiere}</Text>\n                    </Link>\n                </>\n            )}\n            <span> • {anime.themes.length} themes</span>\n        </>\n    );\n\n    return (\n        <SearchResultCard\n            title={anime.name}\n            description={description}\n            image={image}\n            to={`/anime/${anime.slug}`}\n        >\n            {!hideThemes && (\n                <Elevator>\n                    <Flex row wrap gapsBoth=\"0.75rem\">\n                        {anime.themes.slice(0, 4).filter((theme) => {\n                            return theme.entries.length && theme.entries[0].videos.length;\n                        }).map((theme) => (\n                            <ButtonPlay key={theme.id} to={`/video/${theme.entries[0].videos[0].filename}`}>\n                                <Text small block>{theme.slug}</Text>\n                            </ButtonPlay>\n                        ))}\n                        {anime.themes.length > 4 && (\n                            <Button icon title=\"Show all themes\">\n                                <FontAwesomeIcon icon={faEllipsisH} fixedWidth/>\n                            </Button>\n                        )}\n                    </Flex>\n                </Elevator>\n            )}\n        </SearchResultCard>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircleNotch, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\nconst StyledBody = styled.div`\n    padding: 0.5rem;  \n`;\n\nexport default function ButtonPlay({ children, playing, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={playing ? faCircleNotch : faPlay} spin={playing} fixedWidth />\n            </StyledPrefix>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledButtonPlay>\n    );\n}\n","const fetch = require(\"node-fetch\");\nconst withCache = require(\"./utils/withCache\");\n\nconst baseUrl = process.env.GATSBY_API_URL || \"https://animethemes.dev\";\n\nconst requestCooldown = 1000;\nlet lastRequest;\n\nasync function fetchJsonCached(url, init) {\n    // Debounce, we should only request once every second\n    if (lastRequest) {\n        const expiredTime = Date.now() - lastRequest;\n        if (expiredTime < requestCooldown) {\n            await sleep(requestCooldown - expiredTime);\n        }\n    }\n\n    return await withCache(\n        url,\n        (url) => fetch(url, init).then((response) => response.json())\n    );\n}\n\nfunction createFieldParams(fields) {\n    return Object.entries(fields)\n        .map(([ key, values ]) => `fields[${key}]=${values.join()}`)\n        .join(\"&\");\n}\n\nasync function sleep(millis) {\n    return await new Promise((resolve) => setTimeout(resolve, millis));\n}\n\nmodule.exports = {\n    baseUrl,\n    fetchJsonCached,\n    createFieldParams\n};\n","import React from \"react\";\nimport useAniListArtist from \"hooks/useAniListArtist\";\nimport SearchResultCard from \"components/card/searchResult\";\n\nexport default function ArtistSearchResultCard({ artist }) {\n    const { image } = useAniListArtist(artist);\n\n    return (\n        <SearchResultCard\n            title={artist.name}\n            description={artist.performances ? `Artist • ${artist.performances.length} songs` : \"Artist\"}\n            image={image}\n            to={`/artist/${artist.slug}`}\n        />\n    );\n}\n","import Text from \"components/text\";\nimport {Link} from \"gatsby\";\n\nexport default function SongTitleWithArtists({ song }) {\n    return (\n        <>\n            <span>{song.title}</span>\n            {!!song.performances && !!song.performances.length && (\n                <>\n                    <Text small> by </Text>\n                    {song.performances.map((performance, index) => (\n                        <>\n                            <Link to={`/artist/${performance.artist.slug}`}>\n                                <Text key={performance.as || performance.artist.name} link>\n                                    {performance.as || performance.artist.name}\n                                </Text>\n                            </Link>\n                            {index < song.performances.length - 1 && (\n                                <Text small>\n                                    {index === song.performances.length - 2 ? \" & \" : \", \"}\n                                </Text>\n                            )}\n                        </>\n                    ))}\n                </>\n            )}\n        </>\n    );\n}\n","\"use strict\"; // ref: https://github.com/tc39/proposal-global\n\nvar getGlobal = function getGlobal() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  throw new Error('unable to locate global object');\n};\n\nvar global = getGlobal();\nmodule.exports = exports = global.fetch; // Needed for TypeScript and Webpack.\n\nif (global.fetch) {\n  exports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","import {fetchAniListArtist} from \"api/aniList\";\nimport {useEffect, useState} from \"react\";\n\nexport default function useAniList(artist) {\n    const [image, setImage] = useState(null);\n\n    useEffect(() => {\n        let isCanceled = false;\n\n        fetchAniListArtist(artist.name)\n            .then(aniListArtist => {\n                if (!isCanceled) {\n                    setImage(aniListArtist.image);\n                }\n            });\n\n        return () => { isCanceled = true };\n    }, [artist]);\n\n    return { image };\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}