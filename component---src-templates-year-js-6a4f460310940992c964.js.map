{"version":3,"sources":["webpack:///./src/components/card/index.js","webpack:///./src/components/text/index.js","webpack:///./src/components/switcher/index.js","webpack:///./src/components/text/title.js","webpack:///./src/components/text/style.js","webpack:///./src/components/card/searchResult/index.js","webpack:///./src/templates/year.js","webpack:///./src/components/flex/index.js","webpack:///./src/components/card/searchResult/anime.js","webpack:///./src/components/button/play.js","webpack:///./src/hooks/useImage.js","webpack:///./src/components/navigation/season.js","webpack:///./src/components/navigation/year.js"],"names":["StyledCard","styled","div","props","theme","colors","secondaryTitle","primaryBackground","elevation","hoverable","css","Card","children","StyledText","StyledTextBase","small","Text","StyledSwitcher","elevatedPrimaryBackground","gapsRow","Switcher","StyledTitlePage","attrs","as","color","primaryTitle","StyledTitleSection","primaryHighEmphasis","Title","variant","span","code","link","bold","block","maxLines","propTypes","PropTypes","string","bool","number","StyledSearchResultCard","StyledCover","img","StyledBody","gapsColumn","StyledChildren","StyledLink","Link","SearchResultCard","title","description","image","to","card","alt","src","SearchResultDescription","filter","child","map","index","length","primaryMediumEmphasis","seasonOrder","StyledPage","YearDetailPage","allAnime","data","pageContext","year","seasonList","pageTitle","animeBySeason","groupedBySeason","sort","a","b","indexOf","fieldValue","season","animeList","nodes","SeasonPreview","anime","slug","row","justifyContent","toLowerCase","icon","faChevronDown","fixedWidth","query","StyledFlex","wrap","alignItems","gapsBoth","StyledFlexItem","flex","alignSelf","justifySelf","Flex","FlexItem","AnimeSearchResultCard","hideThemes","smallCover","useImage","premiere","premiereLink","themes","name","slice","entries","videos","filename","id","faEllipsisH","StyledButtonPlay","Button","StyledPrefix","secondaryBackground","ButtonPlay","playing","faCircleNotch","faPlay","spin","resourceWithImages","images","facet","largeCover","SeasonNavigation","availableSeason","active","StyledYear","StyledYearPrevious","StyledYearNext","YearNavigation","yearList","useStaticQuery","groupedByYear","group","previousYear","nextYear","silent"],"mappings":"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","file":"component---src-templates-year-js-6a4f460310940992c964.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\n\nconst StyledCard = styled.div`\n    padding: 1rem 1.5rem;\n    border-left: 4px solid ${(props) => props.theme.colors.secondaryTitle};\n    border-radius: 0 0.5rem 0.5rem 0;\n\n    background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation]};\n\n    ${(props) => props.hoverable && css`\n        cursor: pointer;\n\n        &:hover {\n            background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation + 1]};\n        }\n    `}\n`;\n\nexport default function Card({ children, ...props }) {\n    return (\n        <StyledCard {...props}>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\nimport PropTypes from \"prop-types\";\n\nconst StyledText = styled(StyledTextBase)`\n    ${(props) => props.small && css`\n        font-size: 0.8rem;\n        font-weight: bold;\n    `}\n`;\n\nexport default function Text({ children, ...props }) {\n    return (\n        <StyledText {...props}>\n            {children}\n        </StyledText>\n    );\n}\n\nText.propTypes = {\n    ...StyledText.propTypes,\n    small: PropTypes.bool\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledSwitcher = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    background-color: ${elevatedPrimaryBackground};\n\n    border-radius: 1rem;\n\n    ${gapsRow(\"0.5rem\")}\n`;\n\nexport default function Switcher({ children, ...props }) {\n    return (\n        <StyledSwitcher {...props}>\n            {children}\n        </StyledSwitcher>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\n\nconst StyledTitlePage = styled(StyledTextBase).attrs((props) => ({\n    as: \"h1\",\n    color: props.theme.colors.primaryTitle\n}))`\n    font-size: 2rem;\n    font-weight: bold;\n`;\nconst StyledTitleSection = styled(StyledTextBase).attrs((props) => ({\n    as: \"h2\",\n    color: props.theme.colors.primaryHighEmphasis\n}))`\n    font-size: 1rem;\n    font-weight: bold;\n    text-transform: uppercase;\n`;\n\nexport default function Title({ variant = \"page\", children, ...props }) {\n    switch (variant) {\n        case \"section\":\n            return (\n                <StyledTitleSection {...props}>\n                    {children}\n                </StyledTitleSection>\n            );\n        case \"page\":\n        default:\n            return (\n                <StyledTitlePage {...props}>\n                    {children}\n                </StyledTitlePage>\n            );\n    }\n}\n","import styled, { css } from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport PropTypes from \"prop-types\";\n\nexport const StyledTextBase = styled.span.attrs((props) => ({\n    as: props.as || (props.code ? \"code\" : \"span\")\n}))`\n    color: ${(props) => props.color || \"inherit\"};\n\n    ${(props) => props.link && css`\n        color: ${(props) => props.theme.colors.secondaryTitle};\n            \n        &:hover {\n            text-decoration: underline;\n        }\n    `}\n\n    ${(props) => props.bold && css`\n        font-weight: bold;\n    `}\n    \n    ${(props) => props.block && css`\n        display: block;\n    `}\n\n    ${(props) => props.maxLines && css`\n        display: -webkit-box;\n        -webkit-line-clamp: ${props.maxLines};\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    `}\n  \n    ${(props) => props.code && css`\n        font-family: monospace;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n        background-color: ${elevatedPrimaryBackground};\n        line-height: 1.5rem;\n    `}\n\n    margin: 0;\n`;\n\nStyledTextBase.propTypes = {\n    color: PropTypes.string,\n    link: PropTypes.bool,\n    block: PropTypes.bool,\n    maxLines: PropTypes.number,\n    code: PropTypes.bool\n};\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport Text from \"components/text\";\nimport styled from \"styled-components\";\nimport Card from \"components/card/index\";\nimport {gapsColumn} from \"styles/mixins\";\nimport theme from \"theme\";\n\nconst StyledSearchResultCard = styled(Card)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: 0 1rem 0 0;\n`;\nconst StyledCover = styled.img`\n    width: 48px;\n    height: 64px;\n    object-fit: cover;\n`;\nconst StyledBody = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  \n    ${gapsColumn(\"0.25rem\")}  \n  \n    padding: 0 1rem;\n`;\nconst StyledChildren = styled.div`\n    @media (max-width: 720px) {\n        display: none;\n    }\n`;\nconst StyledLink = styled(Link)`\n    display: block;\n`;\n\nexport default function SearchResultCard({ title, description, image, to, children, ...props }) {\n    const card = (\n        <StyledSearchResultCard {...props}>\n            <StyledCover alt=\"Cover\" src={image}/>\n            <StyledBody>\n                <Text bold color={theme.colors.secondaryTitle} maxLines={2}>{title}</Text>\n                <Text small maxLines={1}>{description}</Text>\n            </StyledBody>\n            <StyledChildren>\n                {children}\n            </StyledChildren>\n        </StyledSearchResultCard>\n    );\n\n    if (to) {\n        return (\n            <StyledLink to={to}>\n                {card}\n            </StyledLink>\n        );\n    }\n\n    return card;\n}\n\nexport function SearchResultDescription({ children }) {\n    return children.filter((child) => !!child).map((child, index, { length }) => (\n        <Text color={theme.colors.primaryMediumEmphasis}>\n            <span>{child}</span>\n            {index < length - 1 && (\n                <span color={theme.colors.primaryMediumEmphasis}> &bull; </span>\n            )}\n        </Text>\n    ));\n}\n","import React from \"react\";\nimport {graphql} from \"gatsby\";\nimport styled from \"styled-components\";\nimport AnimeSearchResultCard from \"components/card/searchResult/anime\";\nimport Title from \"components/text/title\";\nimport {gapsColumn} from \"styles/mixins\";\nimport Button from \"components/button\";\nimport Flex from \"components/flex\";\nimport SEO from \"components/seo\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronDown} from \"@fortawesome/free-solid-svg-icons\";\nimport YearNavigation from \"components/navigation/year\";\nimport SeasonNavigation from \"components/navigation/season\";\n\nconst seasonOrder = [ \"Winter\", \"Spring\", \"Summer\", \"Fall\" ];\nconst StyledPage = styled.div`\n    ${gapsColumn()}\n`;\n\nexport default function YearDetailPage({ data: { allAnime }, pageContext: { year, seasonList } }) {\n    const pageTitle = `${year} Anime`;\n    const animeBySeason = allAnime.groupedBySeason.sort((a, b) => seasonOrder.indexOf(a.fieldValue) - seasonOrder.indexOf(b.fieldValue));\n\n    return (\n        <StyledPage>\n            <SEO title={pageTitle} />\n            <YearNavigation year={year} />\n            <SeasonNavigation year={year} seasonList={seasonList} />\n            {animeBySeason.map(({ fieldValue: season, nodes: animeList }) => (\n                <SeasonPreview key={season} season={season} year={year} animeList={animeList}/>\n            ))}\n        </StyledPage>\n    );\n}\n\nfunction SeasonPreview({ season, year, animeList }) {\n    return (\n        <>\n            <Title variant=\"section\">{season}</Title>\n            {animeList.map((anime) => (\n                <AnimeSearchResultCard key={anime.slug} anime={anime}/>\n            ))}\n            <Flex row justifyContent=\"center\">\n                <Button to={`/year/${year}/${season.toLowerCase()}`} icon>\n                    <FontAwesomeIcon icon={faChevronDown} fixedWidth/>\n                </Button>\n            </Flex>\n        </>\n    );\n}\n\nexport const query = graphql`\n    query($year: Int!) {\n        allAnime(filter: { year: { eq: $year } }) {\n            groupedBySeason: group(field: season, limit: 3) {\n                fieldValue\n                nodes {\n                    slug\n                    name\n                    themes {\n                        slug\n                        entries {\n                            videos {\n                                filename\n                            }\n                        }\n                    }\n                    resources {\n                        link\n                        site\n                    }\n                    images {\n                        facet\n                        link\n                    }\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {gapsColumn, gapsRow} from \"styles/mixins\";\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.row ? \"row\" : \"column\"};\n    flex-wrap: ${(props) => props.wrap ? \"wrap\" : \"nowrap\"};\n    justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n    align-items: ${(props) => props.alignItems || \"stretch\"};\n\n    ${(props) => props.gapsRow && gapsRow(props.gapsRow)}\n    ${(props) => props.gapsColumn && gapsColumn(props.gapsColumn)}\n    ${(props) => props.gapsBoth && css`\n        // Hack to have gutters between items without an outer margin\n        margin: calc(${props.gapsBoth} / -2);\n\n        & > * {\n            margin: calc(${props.gapsBoth} / 2);\n        }\n    `}\n`;\nconst StyledFlexItem = styled.div`\n    flex: ${(props) => props.flex || \"0 0 auto\"};\n    align-self: ${(props) => props.alignSelf || \"auto\"};\n    justify-self: ${(props) => props.justifySelf || \"auto\"};\n`;\n\nexport default function Flex({ children, ...props }) {\n    return (\n        <StyledFlex {...props}>\n            {children}\n        </StyledFlex>\n    );\n}\n\nexport function FlexItem({ children, ...props }) {\n    return (\n        <StyledFlexItem {...props}>\n            {children}\n        </StyledFlexItem>\n    );\n}\n","import {Link} from \"gatsby\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEllipsisH} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport SearchResultCard, {SearchResultDescription} from \"components/card/searchResult\";\nimport Elevator from \"components/elevator\";\nimport ButtonPlay from \"components/button/play\";\nimport useImage from \"hooks/useImage\";\n\nexport default function AnimeSearchResultCard({ anime, hideThemes = false }) {\n    const { smallCover } = useImage(anime);\n\n    let premiere = anime.year;\n    let premiereLink = `/year/${anime.year}`;\n    if (anime.season) {\n        premiere = anime.season + \" \" + premiere;\n        premiereLink += `/${anime.season.toLowerCase()}`;\n    }\n\n    let description = (\n        <SearchResultDescription>\n            <span>Anime</span>\n            {!!premiere && (\n                <Link to={premiereLink}>\n                    <Text link>{premiere}</Text>\n                </Link>\n            )}\n            <span>{anime.themes.length} themes</span>\n        </SearchResultDescription>\n    );\n\n    return (\n        <SearchResultCard\n            title={anime.name}\n            description={description}\n            image={smallCover}\n            to={`/anime/${anime.slug}`}\n        >\n            {!hideThemes && (\n                <Elevator>\n                    <Flex row wrap gapsBoth=\"0.75rem\">\n                        {anime.themes.slice(0, 4).filter((theme) => {\n                            return theme.entries.length && theme.entries[0].videos.length;\n                        }).map((theme) => (\n                            <ButtonPlay key={theme.id} to={`/video/${theme.entries[0].videos[0].filename}`}>\n                                <Text small block>{theme.slug}</Text>\n                            </ButtonPlay>\n                        ))}\n                        {anime.themes.length > 4 && (\n                            <Button icon title=\"Show all themes\">\n                                <FontAwesomeIcon icon={faEllipsisH} fixedWidth/>\n                            </Button>\n                        )}\n                    </Flex>\n                </Elevator>\n            )}\n        </SearchResultCard>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircleNotch, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\nconst StyledBody = styled.div`\n    padding: 0.5rem;  \n`;\n\nexport default function ButtonPlay({ children, playing, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={playing ? faCircleNotch : faPlay} spin={playing} fixedWidth />\n            </StyledPrefix>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledButtonPlay>\n    );\n}\n","export default function useImage(resourceWithImages) {\n    const images = {};\n\n    if (resourceWithImages) {\n        for (const image of resourceWithImages.images) {\n            switch (image.facet) {\n                case \"Small Cover\":\n                    images.smallCover = image.link;\n                    break;\n                case \"Large Cover\":\n                    images.largeCover = image.link;\n                    break;\n                default:\n                // Ignore\n            }\n        }\n    }\n\n    return images;\n}\n","import Flex from \"components/flex\";\nimport Switcher from \"components/switcher\";\nimport Button from \"components/button\";\nimport React from \"react\";\n\nexport default function SeasonNavigation({ year, season, seasonList }) {\n    return (\n        <Flex row justifyContent=\"center\">\n            <Switcher>\n                {seasonList.map((availableSeason) => (\n                    <Button key={availableSeason} to={`/year/${year}/${availableSeason.toLowerCase()}`} active={availableSeason === season}>{availableSeason}</Button>\n                ))}\n            </Switcher>\n        </Flex>\n    );\n}\n","import {graphql, Link, useStaticQuery} from \"gatsby\";\nimport Button from \"components/button\";\nimport Title from \"components/text/title\";\nimport styled from \"styled-components\";\nimport Flex from \"components/flex\";\n\nconst StyledYear = styled.div`\n    flex: 1;\n\n    display: flex;\n\n    margin: 0 1rem;\n`;\nconst StyledYearPrevious = styled(StyledYear)`\n    justify-content: flex-end;\n`;\nconst StyledYearNext = styled(StyledYear)`\n    justify-content: flex-start;\n`;\n\nexport default function YearNavigation({ year }) {\n    const yearList = useStaticQuery(graphql`\n        query {\n            allAnime {\n                groupedByYear: group(field: year) {\n                    year: fieldValue\n                }\n            }\n        }\n    `).allAnime.groupedByYear.map((group) => +group.year);\n\n    const previousYear = yearList.indexOf(year) > 0 ? yearList[yearList.indexOf(year) - 1] : null;\n    const nextYear = yearList.indexOf(year) < yearList.length - 1 ? yearList[yearList.indexOf(year) + 1] : null;\n\n    return (\n        <Flex row alignItems=\"center\">\n            <StyledYearPrevious>\n                {previousYear && (\n                    <Link to={`/year/${previousYear}`}>\n                        <Button silent>{previousYear}</Button>\n                    </Link>\n                )}\n            </StyledYearPrevious>\n            <Button to=\"/year\" silent>\n                <Title>{year}</Title>\n            </Button>\n            <StyledYearNext>\n                {nextYear && (\n                    <Link to={`/year/${nextYear}`}>\n                        <Button silent>{nextYear}</Button>\n                    </Link>\n                )}\n            </StyledYearNext>\n        </Flex>\n    );\n}\n"],"sourceRoot":""}