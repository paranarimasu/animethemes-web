{"version":3,"sources":["webpack:///./src/components/card/index.js","webpack:///./src/components/text/index.js","webpack:///./src/templates/series.js","webpack:///./src/components/container/sidebar.js","webpack:///./src/components/text/title.js","webpack:///./src/components/text/style.js","webpack:///./src/components/card/searchResult/index.js","webpack:///./src/components/flex/index.js","webpack:///./src/components/card/searchResult/anime.js","webpack:///./src/components/button/play.js","webpack:///./src/hooks/useImage.js"],"names":["StyledCard","styled","div","props","theme","colors","secondaryTitle","primaryBackground","elevation","hoverable","css","Card","children","StyledText","StyledTextBase","small","Text","StyledSeriesPage","gapsColumn","StyledCoverContainer","StyledCoverContainerFlex","StyledCoverItemContainer","StyledCover","img","SeriesDetailPage","series","data","images","useImage","anime","map","largeCover","filter","image","sidebar","src","title","name","variant","query","StyledContainerSidebar","StyledSidebar","StyledBody","ContainerSidebar","StyledTitlePage","attrs","as","color","primaryTitle","StyledTitleSection","primaryHighEmphasis","Title","span","code","link","bold","block","maxLines","elevatedPrimaryBackground","propTypes","PropTypes","string","bool","number","StyledSearchResultCard","StyledChildren","StyledLink","Link","SearchResultCard","description","to","card","alt","SearchResultDescription","child","index","length","primaryMediumEmphasis","StyledFlex","row","wrap","justifyContent","alignItems","gapsRow","gapsBoth","StyledFlexItem","flex","alignSelf","justifySelf","Flex","FlexItem","AnimeSearchResultCard","hideThemes","smallCover","premiere","year","premiereLink","season","toLowerCase","themes","slug","slice","entries","videos","filename","id","icon","faEllipsisH","fixedWidth","StyledButtonPlay","Button","StyledPrefix","secondaryBackground","ButtonPlay","playing","faCircleNotch","faPlay","spin","resourceWithImages","facet"],"mappings":"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","file":"component---src-templates-series-js-0d08e15ceea1efd5eab8.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\n\nconst StyledCard = styled.div`\n    padding: 1rem 1.5rem;\n    border-left: 4px solid ${(props) => props.theme.colors.secondaryTitle};\n    border-radius: 0 0.5rem 0.5rem 0;\n\n    background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation]};\n\n    ${(props) => props.hoverable && css`\n        cursor: pointer;\n\n        &:hover {\n            background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation + 1]};\n        }\n    `}\n`;\n\nexport default function Card({ children, ...props }) {\n    return (\n        <StyledCard {...props}>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\nimport PropTypes from \"prop-types\";\n\nconst StyledText = styled(StyledTextBase)`\n    ${(props) => props.small && css`\n        font-size: 0.8rem;\n        font-weight: bold;\n    `}\n`;\n\nexport default function Text({ children, ...props }) {\n    return (\n        <StyledText {...props}>\n            {children}\n        </StyledText>\n    );\n}\n\nText.propTypes = {\n    ...StyledText.propTypes,\n    small: PropTypes.bool\n};\n","import Title from \"components/text/title\";\nimport Flex from \"components/flex\";\nimport React from \"react\";\nimport ContainerSidebar from \"components/container/sidebar\";\nimport styled from \"styled-components\";\nimport { gapsColumn } from \"styles/mixins\";\nimport AnimeSearchResultCard from \"components/card/searchResult/anime\";\nimport SEO from \"components/seo\";\nimport { graphql } from \"gatsby\";\nimport useImage from \"hooks/useImage\";\n\nconst StyledSeriesPage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledCoverContainer = styled.div`        \n    position: relative;\n    width: 100%;\n    padding-top: 150%;\n`;\nconst StyledCoverContainerFlex = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n`;\nconst StyledCoverItemContainer = styled.div`\n    flex: 1;\n    width: 100%;\n    height: 100%;\n`;\nconst StyledCover = styled.img`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n`;\n\nexport default function SeriesDetailPage({ data: { series } }) {\n    const images = [\n        useImage(series.anime[0]),\n        useImage(series.anime[1]),\n        useImage(series.anime[2]),\n        useImage(series.anime[3])\n    ].map((images) => images.largeCover).filter((image) => !!image);\n\n    const sidebar = (\n        <Flex gapsColumn=\"1.5rem\">\n            <StyledCoverContainer>\n                <StyledCoverContainerFlex>\n                    {images.map((image) => (\n                        <StyledCoverItemContainer>\n                            <StyledCover src={image}/>\n                        </StyledCoverItemContainer>\n                    ))}\n                </StyledCoverContainerFlex>\n            </StyledCoverContainer>\n        </Flex>\n    );\n\n    return (\n        <StyledSeriesPage>\n            <SEO title={series.name} />\n            <Title>{series.name}</Title>\n            <ContainerSidebar sidebar={sidebar}>\n                <Flex gapsColumn=\"1rem\">\n                    <Title variant=\"section\">Anime</Title>\n                    {series.anime.map((anime) => (\n                        <AnimeSearchResultCard anime={anime}/>\n                    ))}\n                </Flex>\n            </ContainerSidebar>\n        </StyledSeriesPage>\n    );\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        series(slug: { eq: $slug }) {\n            slug\n            name\n            anime {\n                slug\n                name\n                themes {\n                    slug\n                    entries {\n                        videos {\n                            filename\n                        }\n                    }\n                }\n                resources {\n                    link\n                    site\n                }\n                images {\n                    facet\n                    link\n                }\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainerSidebar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n    }\n`;\nconst StyledSidebar = styled.div`\n    flex: 1;\n\n    @media (min-width: 721px) {\n        margin-right: 2rem;\n    }\n    @media (max-width: 720px) {\n        margin-bottom: 1.5rem;\n    }\n`;\nconst StyledBody = styled.div`\n    flex: 3;\n`;\n\nexport default function ContainerSidebar({ sidebar, children, ...props }) {\n    return (\n        <StyledContainerSidebar {...props}>\n            <StyledSidebar>\n                {sidebar}\n            </StyledSidebar>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledContainerSidebar>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\n\nconst StyledTitlePage = styled(StyledTextBase).attrs((props) => ({\n    as: \"h1\",\n    color: props.theme.colors.primaryTitle\n}))`\n    font-size: 2rem;\n    font-weight: bold;\n`;\nconst StyledTitleSection = styled(StyledTextBase).attrs((props) => ({\n    as: \"h2\",\n    color: props.theme.colors.primaryHighEmphasis\n}))`\n    font-size: 1rem;\n    font-weight: bold;\n    text-transform: uppercase;\n`;\n\nexport default function Title({ variant = \"page\", children, ...props }) {\n    switch (variant) {\n        case \"section\":\n            return (\n                <StyledTitleSection {...props}>\n                    {children}\n                </StyledTitleSection>\n            );\n        case \"page\":\n        default:\n            return (\n                <StyledTitlePage {...props}>\n                    {children}\n                </StyledTitlePage>\n            );\n    }\n}\n","import styled, { css } from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport PropTypes from \"prop-types\";\n\nexport const StyledTextBase = styled.span.attrs((props) => ({\n    as: props.as || (props.code ? \"code\" : \"span\")\n}))`\n    color: ${(props) => props.color || \"inherit\"};\n\n    ${(props) => props.link && css`\n        color: ${(props) => props.theme.colors.secondaryTitle};\n            \n        &:hover {\n            text-decoration: underline;\n        }\n    `}\n\n    ${(props) => props.bold && css`\n        font-weight: bold;\n    `}\n    \n    ${(props) => props.block && css`\n        display: block;\n    `}\n\n    ${(props) => props.maxLines && css`\n        display: -webkit-box;\n        -webkit-line-clamp: ${props.maxLines};\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    `}\n  \n    ${(props) => props.code && css`\n        font-family: monospace;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n        background-color: ${elevatedPrimaryBackground};\n        line-height: 1.5rem;\n    `}\n\n    margin: 0;\n`;\n\nStyledTextBase.propTypes = {\n    color: PropTypes.string,\n    link: PropTypes.bool,\n    block: PropTypes.bool,\n    maxLines: PropTypes.number,\n    code: PropTypes.bool\n};\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport Text from \"components/text\";\nimport styled from \"styled-components\";\nimport Card from \"components/card/index\";\nimport {gapsColumn} from \"styles/mixins\";\nimport theme from \"theme\";\n\nconst StyledSearchResultCard = styled(Card)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: 0 1rem 0 0;\n`;\nconst StyledCover = styled.img`\n    width: 48px;\n    height: 64px;\n    object-fit: cover;\n`;\nconst StyledBody = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  \n    ${gapsColumn(\"0.25rem\")}  \n  \n    padding: 0 1rem;\n`;\nconst StyledChildren = styled.div`\n    @media (max-width: 720px) {\n        display: none;\n    }\n`;\nconst StyledLink = styled(Link)`\n    display: block;\n`;\n\nexport default function SearchResultCard({ title, description, image, to, children, ...props }) {\n    const card = (\n        <StyledSearchResultCard {...props}>\n            <StyledCover alt=\"Cover\" src={image}/>\n            <StyledBody>\n                <Text bold color={theme.colors.secondaryTitle} maxLines={2}>{title}</Text>\n                <Text small maxLines={1}>{description}</Text>\n            </StyledBody>\n            <StyledChildren>\n                {children}\n            </StyledChildren>\n        </StyledSearchResultCard>\n    );\n\n    if (to) {\n        return (\n            <StyledLink to={to}>\n                {card}\n            </StyledLink>\n        );\n    }\n\n    return card;\n}\n\nexport function SearchResultDescription({ children }) {\n    return children.filter((child) => !!child).map((child, index, { length }) => (\n        <Text color={theme.colors.primaryMediumEmphasis}>\n            <span>{child}</span>\n            {index < length - 1 && (\n                <span color={theme.colors.primaryMediumEmphasis}> &bull; </span>\n            )}\n        </Text>\n    ));\n}\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {gapsColumn, gapsRow} from \"styles/mixins\";\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.row ? \"row\" : \"column\"};\n    flex-wrap: ${(props) => props.wrap ? \"wrap\" : \"nowrap\"};\n    justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n    align-items: ${(props) => props.alignItems || \"stretch\"};\n\n    ${(props) => props.gapsRow && gapsRow(props.gapsRow)}\n    ${(props) => props.gapsColumn && gapsColumn(props.gapsColumn)}\n    ${(props) => props.gapsBoth && css`\n        // Hack to have gutters between items without an outer margin\n        margin: calc(${props.gapsBoth} / -2);\n\n        & > * {\n            margin: calc(${props.gapsBoth} / 2);\n        }\n    `}\n`;\nconst StyledFlexItem = styled.div`\n    flex: ${(props) => props.flex || \"0 0 auto\"};\n    align-self: ${(props) => props.alignSelf || \"auto\"};\n    justify-self: ${(props) => props.justifySelf || \"auto\"};\n`;\n\nexport default function Flex({ children, ...props }) {\n    return (\n        <StyledFlex {...props}>\n            {children}\n        </StyledFlex>\n    );\n}\n\nexport function FlexItem({ children, ...props }) {\n    return (\n        <StyledFlexItem {...props}>\n            {children}\n        </StyledFlexItem>\n    );\n}\n","import {Link} from \"gatsby\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEllipsisH} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport SearchResultCard, {SearchResultDescription} from \"components/card/searchResult\";\nimport Elevator from \"components/elevator\";\nimport ButtonPlay from \"components/button/play\";\nimport useImage from \"hooks/useImage\";\n\nexport default function AnimeSearchResultCard({ anime, hideThemes = false }) {\n    const { smallCover } = useImage(anime);\n\n    let premiere = anime.year;\n    let premiereLink = `/year/${anime.year}`;\n    if (anime.season) {\n        premiere = anime.season + \" \" + premiere;\n        premiereLink += `/${anime.season.toLowerCase()}`;\n    }\n\n    let description = (\n        <SearchResultDescription>\n            <span>Anime</span>\n            {!!premiere && (\n                <Link to={premiereLink}>\n                    <Text link>{premiere}</Text>\n                </Link>\n            )}\n            <span>{anime.themes.length} themes</span>\n        </SearchResultDescription>\n    );\n\n    return (\n        <SearchResultCard\n            title={anime.name}\n            description={description}\n            image={smallCover}\n            to={`/anime/${anime.slug}`}\n        >\n            {!hideThemes && (\n                <Elevator>\n                    <Flex row wrap gapsBoth=\"0.75rem\">\n                        {anime.themes.slice(0, 4).filter((theme) => {\n                            return theme.entries.length && theme.entries[0].videos.length;\n                        }).map((theme) => (\n                            <ButtonPlay key={theme.id} to={`/video/${theme.entries[0].videos[0].filename}`}>\n                                <Text small block>{theme.slug}</Text>\n                            </ButtonPlay>\n                        ))}\n                        {anime.themes.length > 4 && (\n                            <Button icon title=\"Show all themes\">\n                                <FontAwesomeIcon icon={faEllipsisH} fixedWidth/>\n                            </Button>\n                        )}\n                    </Flex>\n                </Elevator>\n            )}\n        </SearchResultCard>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircleNotch, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\nconst StyledBody = styled.div`\n    padding: 0.5rem;  \n`;\n\nexport default function ButtonPlay({ children, playing, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={playing ? faCircleNotch : faPlay} spin={playing} fixedWidth />\n            </StyledPrefix>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledButtonPlay>\n    );\n}\n","export default function useImage(resourceWithImages) {\n    const images = {};\n\n    if (resourceWithImages) {\n        for (const image of resourceWithImages.images) {\n            switch (image.facet) {\n                case \"Small Cover\":\n                    images.smallCover = image.link;\n                    break;\n                case \"Large Cover\":\n                    images.largeCover = image.link;\n                    break;\n                default:\n                // Ignore\n            }\n        }\n    }\n\n    return images;\n}\n"],"sourceRoot":""}