{"version":3,"sources":["webpack:///./src/components/tag/index.js","webpack:///./src/components/switcher/index.js","webpack:///./src/components/container/sidebar.js","webpack:///./src/components/utils/themeEntryTags.js","webpack:///./src/components/descriptionList/index.js","webpack:///./src/components/utils/videoTags.js","webpack:///./src/components/card/collapse.js","webpack:///./src/components/card/theme/style.js","webpack:///./src/components/card/theme/index.js","webpack:///./src/components/switcher/theme.js","webpack:///./src/templates/anime.js","webpack:///./src/components/button/play.js","webpack:///./src/components/utils/songTitleWithArtists.js","webpack:///./src/components/button/video.js","webpack:///./src/components/externalLink/index.js"],"names":["StyledTag","styled","span","gapsRow","StyledTagIcon","FontAwesomeIcon","props","theme","colors","primaryLowEmphasis","warning","css","warningTitle","Tag","icon","iconProps","children","fixedWidth","small","StyledSwitcher","div","elevatedPrimaryBackground","Switcher","StyledContainerSidebar","StyledSidebar","StyledBody","ContainerSidebar","sidebar","ThemeEntryTags","entry","row","wrap","gapsBoth","faFilm","episodes","spoiler","faBomb","nsfw","faExclamationTriangle","StyledDescriptionList","dl","StyledKey","dt","StyledValue","dd","DescriptionList","Object","entries","map","title","description","variant","VideoTags","video","resolution","nc","faNotEqual","subbed","faClosedCaptioning","lyrics","faComment","uncen","faEye","source","faCompactDisc","toUpperCase","overlap","faStream","StyledCollapse","height","CollapseCard","useState","collapse","setCollapse","setHeight","ref","useRef","useEffect","current","offsetHeight","hoverable","onClick","StyledThemeCard","Card","gapsColumn","StyledRow","StyledSequence","Text","primaryTitle","secondary","primaryMediumEmphasis","StyledHeader","StyledVersion","StyledVideoListContainer","StyledVideoList","Flex","attrs","ThemeCard","slug","song","version","videos","index","ThemeSwitcher","themes","groups","useMemo","reduce","group","find","name","push","activeGroup","setActiveGroup","length","alignSelf","active","StyledAnimePage","StyledCover","img","fullWidth","StyledList","AnimeDetailPage","anime","data","useAniList","synopsis","image","src","alt","synonyms","synonym","to","year","season","toLowerCase","link","series","resources","resource","href","site","maxLines","dangerouslySetInnerHTML","__html","query","StyledButtonPlay","Button","StyledPrefix","secondaryBackground","primaryBackground","ButtonPlay","playing","faCircleNotch","faPlay","spin","SongTitleWithArtists","performances","performance","artist","as","VideoButton","currentVideo","useContext","PlayerContext","filename","StyledExternalLink","forwardedAs","ExternalLink","target","faChevronCircleRight"],"mappings":"uNAMMA,EAAYC,IAAOC,KAAV,iEAAGD,CAAH,kEAKTE,YAAQ,YAERC,EAAgBH,YAAOI,KAAV,qEAAGJ,CAAH,mBACN,SAACK,GAAD,OAAWA,EAAMC,MAAMC,OAAOC,sBAErC,SAACH,GAAD,OAAWA,EAAMI,SAAWC,YAAjB,gBACA,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOI,mBAIhC,SAASC,EAAT,GAAgE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,UAAWL,EAA+B,EAA/BA,QAASM,EAAsB,EAAtBA,SAAaV,EAAS,yDAC1E,OACI,eAACN,EAAD,iBAAeM,EAAf,aACOQ,GACC,cAACV,EAAD,eAAeU,KAAMA,EAAMG,YAAU,EAACP,QAASA,GAAaK,MAE7DC,GACC,cAAC,IAAD,CAAME,OAAK,EAAX,SACKF,U,kJCxBfG,EAAiBlB,IAAOmB,IAAV,8EAAGnB,CAAH,gFAIIoB,IAIlBlB,YAAQ,WAGC,SAASmB,EAAT,GAA2C,IAAvBN,EAAsB,EAAtBA,SAAaV,EAAS,4BACrD,OACI,cAACa,EAAD,iBAAoBb,EAApB,UACKU,O,0HChBPO,EAAyBtB,IAAOmB,IAAV,kFAAGnB,CAAH,sFAQtBuB,EAAgBvB,IAAOmB,IAAV,yEAAGnB,CAAH,wGAUbwB,EAAaxB,IAAOmB,IAAV,sEAAGnB,CAAH,aAID,SAASyB,EAAT,GAA4D,IAAhCC,EAA+B,EAA/BA,QAASX,EAAsB,EAAtBA,SAAaV,EAAS,sCACtE,OACI,eAACiB,EAAD,iBAA4BjB,EAA5B,WACG,cAACkB,EAAD,UACKG,IAEL,cAACF,EAAD,UACKT,U,kIC3BD,SAASY,EAAT,GAAoC,IAAVC,EAAS,EAATA,MACrC,OACI,eAAC,IAAD,CAAMC,KAAG,EAACC,MAAI,EAACC,SAAS,UAAxB,UACI,cAAC,IAAD,CAAKlB,KAAMmB,IAAX,SACKJ,EAAMK,UAAY,QAEpBL,EAAMM,SACL,cAAC,IAAD,CAAKrB,KAAMsB,IAAQ1B,SAAO,EAA1B,uBAIDmB,EAAMQ,MACL,cAAC,IAAD,CAAKvB,KAAMwB,IAAuB5B,SAAO,EAAzC,uB,sICbV6B,EAAwBtC,IAAOuC,GAAV,yFAAGvC,CAAH,qEAOrBwC,EAAYxC,IAAOyC,GAAV,6EAAGzC,CAAH,2BAGT0C,EAAc1C,IAAO2C,GAAV,+EAAG3C,CAAH,wDAQF,SAAS4C,EAAT,GAAkD,IAAvB7B,EAAsB,EAAtBA,SAAaV,EAAS,4BAC5D,OACI,cAACiC,EAAD,iBAA2BjC,EAA3B,UACKwC,OAAOC,QAAQ/B,GAAUgC,KAAI,gBAAGC,EAAH,KAAUC,EAAV,aACxBA,GACE,qCACI,cAACT,EAAD,UACI,cAAC,IAAD,CAAOU,QAAQ,UAAf,SAA0BF,MAE9B,cAACN,EAAD,UAAcO,e,0HCpBvB,SAASE,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAChC,OACI,eAAC,IAAD,CAAMvB,KAAG,EAACC,MAAI,EAACC,SAAS,UAAxB,UACI,eAAC,IAAD,CAAKiB,MAAM,aAAX,UACKI,EAAMC,WADX,SAIGD,EAAME,IACL,cAAC,IAAD,CAAKzC,KAAM0C,IAAYP,MAAM,iBAG9BI,EAAMI,QACL,cAAC,IAAD,CAAK3C,KAAM4C,IAAoBT,MAAM,qBAGtCI,EAAMM,QACL,cAAC,IAAD,CAAK7C,KAAM8C,IAAWX,MAAM,kBAG7BI,EAAMQ,OACL,cAAC,IAAD,CAAK/C,KAAMgD,IAAOb,MAAM,iBAGzBI,EAAMU,QACL,cAAC,IAAD,CAAKjD,KAAMkD,IAAef,MAAM,SAAhC,SACKI,EAAMU,OAAOE,gBAIH,SAAlBZ,EAAMa,SACH,cAAC,IAAD,CAAKpD,KAAMqD,IAAUlB,MAAM,UAA3B,SACKI,EAAMa,QAAQD,qB,uRCtC7BG,EAAiBnE,IAAOmB,IAAV,+EAAGnB,CAAH,yDACN,SAACK,GAAD,OAAWA,EAAM+D,UAKhB,SAASC,EAAT,GAA+C,IAAvBtD,EAAsB,EAAtBA,SAAaV,EAAS,8BACzBiE,oBAAS,GAAlCC,EADkD,KACxCC,EADwC,OAE7BF,mBAAS,MAA9BF,EAFkD,KAE1CK,EAF0C,KAGnDC,EAAMC,iBAAO,MAMnB,OAJAC,qBAAU,WACNH,EAAUC,EAAIG,QAAQ9D,SAAS,GAAG+D,gBACnC,CAACP,EAAUxD,IAGV,cAAC,IAAD,eAAMgE,WAAS,EAACC,QAAS,kBAAMR,GAAaD,KAAelE,EAA3D,UACI,cAAC8D,EAAD,CAAgBO,IAAKA,EAAKN,OAAQA,EAAYA,EAAN,KAAmB,OAA3D,SACKrD,EAASwD,Q,gBChBbU,G,UAAkBjF,YAAOkF,KAAV,yEAAGlF,CAAH,QACtBmF,gBAGOC,EAAYpF,IAAOmB,IAAV,mEAAGnB,CAAH,yDAMTqF,EAAiBrF,YAAOsF,KAAV,wEAAGtF,CAAH,gDAKd,SAACK,GAAD,OAAWA,EAAMC,MAAMC,OAAOgF,gBAErC,SAAClF,GAAD,OAAWA,EAAMmF,WAAa9E,YAAnB,gEACA,SAACL,GAAD,OAAWA,EAAMC,MAAMC,OAAOkF,4BAQlCC,EAAe1F,IAAOmB,IAAV,sEAAGnB,CAAH,aAIZ2F,EAAgB3F,IAAOmB,IAAV,uEAAGnB,CAAH,yIAWhBmF,eAIGS,EAA2B5F,IAAOmB,IAAV,kFAAGnB,CAAH,aAIxB6F,EAAkB7F,YAAO8F,KAAMC,MAAM,CAC9ClE,KAAK,EACLC,MAAM,EACNC,SAAU,YAHc,yEAAG/B,CAAH,yD,gDCvCb,SAASgG,EAAT,GAA+B,IAAV1F,EAAS,EAATA,MAChC,OACI,cAAC2E,EAAD,UACI,eAAC,IAAD,WACI,eAACG,EAAD,WACI,cAACC,EAAD,CAAgBpE,OAAK,EAArB,SAAuBX,EAAM2F,OAC7B,cAACP,EAAD,UACI,cAAC,IAAD,CAAOxC,QAAQ,OAAf,SACI,cAAC,IAAD,CAAsBgD,KAAM5F,EAAM4F,cAI7C5F,EAAMwC,QAAQC,KAAI,SAAAnB,GAAK,OACpB,eAACwD,EAAD,WACI,cAACC,EAAD,CAAgBpE,OAAK,EAACuE,WAAS,EAA/B,WAAmC5D,EAAMuE,SAAR,IAAuBvE,EAAMuE,UAC9D,eAACR,EAAD,WACI,cAAC,IAAD,CAAgB/D,MAAOA,MACpBA,EAAMwE,QACL,cAACR,EAAD,UACI,cAACC,EAAD,UACKjE,EAAMwE,OAAOrD,KAAI,SAACK,EAAOiD,GAAR,OACd,cAAC,IAAD,CAAyBjD,MAAOA,GAAdiD,eAR1BzE,EAAMuE,SAAW,W,4BCvBtC,SAASG,EAAT,GAAoC,IAAXC,EAAU,EAAVA,OAC9BC,EAASC,mBAAQ,kBAAMF,EAAOG,QAAO,SAACF,EAAQlG,GAChD,IAAMqG,EAAQH,EAAOI,MAAK,SAACD,GAAD,OAAWA,EAAME,OAASvG,EAAMqG,SAS1D,OARKA,EAMDA,EAAMJ,OAAOO,KAAKxG,GALlBkG,EAAOM,KAAK,CACRD,KAAMvG,EAAMqG,MACZJ,OAAQ,CAACjG,KAKVkG,IACR,MAAK,CAAED,IAZoC,EAcRjC,mBAASkC,EAAO,IAA/CO,EAduC,KAc1BC,EAd0B,KAgB9C,OACI,eAAC,IAAD,CAAM7B,WAAW,OAAjB,UACKqB,EAAOS,OAAS,GACb,cAAC,IAAD,CAAUC,UAAU,aAApB,SACI,cAAC,IAAD,UACKV,EAAOzD,KAAI,SAAC4D,GAAD,OACR,cAAC,IAAD,CAEIQ,OAAQJ,IAAgBJ,EACxB3B,QAAS,kBAAMgC,EAAeL,IAHlC,SAKKA,EAAME,MAAQ,YAJVF,EAAME,aAU9BE,EAAYR,OAAOxD,KAAI,SAACzC,EAAO+F,GAAR,OACpB,cAACL,EAAD,CAAuB1F,MAAOA,GAAd+F,S,gBCzB1Be,EAAkBpH,IAAOmB,IAAV,yEAAGnB,CAAH,QACfmF,YAAW,WAEXkC,EAAcrH,IAAOsH,IAAV,qEAAGtH,CAAWuH,KACzBC,EAAaxH,IAAOmB,IAAV,oEAAGnB,CAAH,8DAIVmF,YAAW,WAKF,SAASsC,EAAT,GAA+C,IAAZC,EAAW,EAAnBC,KAAQD,MAAW,EAC7BE,YAAWF,GAA/BG,EADiD,EACjDA,SAAUC,EADuC,EACvCA,MAEZpG,EACF,eAAC,IAAD,CAAMyD,WAAW,SAAjB,UACI,cAACkC,EAAD,CAAaU,IAAKD,EAAOE,IAAI,UAC7B,cAAC,IAAD,UACK,CACG,uBACMN,EAAMO,SAAShB,QACb,cAACO,EAAD,UACKE,EAAMO,SAASlF,KAAI,SAACmF,GAAD,OAChB,cAAC,IAAD,UAAqBA,GAAVA,QAK3B,SACI,cAAC,OAAD,CAAMC,GAAE,SAAWT,EAAMU,MAAOV,EAAMW,OAAN,IAAmBX,EAAMW,OAAOC,cAAkB,IAAlF,SACI,cAAC,IAAD,CAAMC,MAAI,EAAV,UACMb,EAAMW,OAASX,EAAMW,OAAS,IAAM,IAAMX,EAAMU,SAI9D,SACMV,EAAMc,UAAYd,EAAMc,OAAOvB,QAC7B,cAACO,EAAD,UACKE,EAAMc,OAAOzF,KAAI,SAACyF,GAAD,OACd,cAAC,OAAD,CAAML,GAAE,WAAaK,EAAOvC,KAA5B,SACI,cAAC,IAAD,CAAMsC,MAAI,EAAV,SACKC,EAAO3B,cAOhC,QACMa,EAAMe,WAAaf,EAAMe,UAAU1F,KAAI,SAAC2F,GAAD,OACrC,cAAC,IAAD,CAAkCC,KAAMD,EAASH,KAAjD,SACKG,EAASE,MADKF,EAASH,eAUpD,OACI,eAACnB,EAAD,WACI,cAAC,IAAD,CAAKpE,MAAO0E,EAAMb,OAClB,cAAC,IAAD,UAAQa,EAAMb,OACd,cAAC,IAAD,CAAkBnF,QAASA,EAA3B,SACI,eAAC,IAAD,CAAMyD,WAAW,OAAjB,UACI,cAAC,IAAD,CAAOjC,QAAQ,UAAf,sBACA,cAACmB,EAAD,UACK,SAACE,GAAD,OACG,cAAC,IAAD,CAAMsE,SAAUtE,EAAW,EAAI,KAAMuE,wBAAyB,CAAEC,OAAQlB,QAGhF,cAAC,IAAD,CAAO3E,QAAQ,UAAf,oBAEMwE,EAAMnB,QAAUmB,EAAMnB,OAAOU,OAC7B,cAACX,EAAD,CAAeC,OAAQmB,EAAMnB,SAC7B,cAAC,IAAD,0DAQnB,IAAMyC,EAAK,a,4JC/FZC,EAAmBjJ,YAAOkJ,KAAV,6EAAGlJ,CAAH,+FAQhBmJ,EAAenJ,IAAOmB,IAAV,yEAAGnB,CAAH,+JAUM,SAACK,GAAD,OAAWA,EAAMC,MAAMC,OAAO6I,uBACzC,SAAC/I,GAAD,OAAWA,EAAMC,MAAMC,OAAO8I,kBAAkB,MAEvD7H,EAAaxB,IAAOmB,IAAV,uEAAGnB,CAAH,qBAID,SAASsJ,EAAT,GAAsD,IAAhCvI,EAA+B,EAA/BA,SAAUwI,EAAqB,EAArBA,QAAYlJ,EAAS,sCAChE,OACI,eAAC4I,EAAD,iBAAsB5I,EAAtB,WACI,cAAC8I,EAAD,UACI,cAAC,IAAD,CAAiBtI,KAAM0I,EAAUC,IAAgBC,IAAQC,KAAMH,EAASvI,YAAU,MAEtF,cAACQ,EAAD,UACKT,U,4GCnCF,SAAS4I,EAAT,GAAyC,IAATzD,EAAQ,EAARA,KAC3C,OACI,qCACI,+BAAOA,EAAKlD,UACTkD,EAAK0D,gBAAkB1D,EAAK0D,aAAa3C,QACxC,qCACI,cAAC,IAAD,CAAMhG,OAAK,EAAX,kBACCiF,EAAK0D,aAAa7G,KAAI,SAAC8G,EAAaxD,GAAd,OACnB,qCACI,cAAC,OAAD,CAAM8B,GAAE,WAAa0B,EAAYC,OAAO7D,KAAxC,SACI,cAAC,IAAD,CAAsDsC,MAAI,EAA1D,SACKsB,EAAYE,IAAMF,EAAYC,OAAOjD,MAD/BgD,EAAYE,IAAMF,EAAYC,OAAOjD,QAInDR,EAAQH,EAAK0D,aAAa3C,OAAS,GAChC,cAAC,IAAD,CAAMhG,OAAK,EAAX,SACKoF,IAAUH,EAAK0D,aAAa3C,OAAS,EAAI,MAAQ,qB,gJCdvE,SAAS+C,EAAT,GAA2C,IAApB5G,EAAmB,EAAnBA,MAAU/C,EAAS,yBAC7C4J,EAAiBC,qBAAWC,KAA5BF,aAER,OACI,cAAC,IAAD,eAAY9B,GAAE,UAAY/E,EAAMgH,SAAYb,QAASU,GAAgBA,EAAaG,WAAahH,EAAMgH,UAAc/J,EAAnH,UACI,cAAC,IAAD,CAAW+C,MAAOA,S,0KCHxBiH,EAAqBrK,YAAOsF,KAAMS,MAAM,CAC1CuE,YAAa,IACb/B,MAAM,IAFc,uFAAGvI,CAAH,QAIlBE,YAAQ,YAGC,SAASqK,EAAT,GAAqD,IAA7B5B,EAA4B,EAA5BA,KAAM5H,EAAsB,EAAtBA,SAAaV,EAAS,mCAC/D,OACI,eAACgK,EAAD,eAAoB1B,KAAMA,EAAM6B,OAAO,UAAanK,EAApD,WACI,+BAAOU,IACP,cAAC,IAAD,CAAiBF,KAAM4J","file":"component---src-templates-anime-js-893189131d73800afcc2.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {gapsRow} from \"styles/mixins\";\nimport Text from \"components/text\";\n\nconst StyledTag = styled.span`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n\n    ${gapsRow(\"0.25rem\")}\n`;\nconst StyledTagIcon = styled(FontAwesomeIcon)`\n    color: ${(props) => props.theme.colors.primaryLowEmphasis};\n\n    ${(props) => props.warning && css`\n        color: ${(props) => props.theme.colors.warningTitle};\n    `}\n`;\n\nexport default function Tag({ icon, iconProps, warning, children, ...props }) {\n    return (\n        <StyledTag {...props}>\n            {!!icon && (\n                <StyledTagIcon icon={icon} fixedWidth warning={warning} {...iconProps}/>\n            )}\n            {!!children && (\n                <Text small>\n                    {children}\n                </Text>\n            )}\n        </StyledTag>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledSwitcher = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    background-color: ${elevatedPrimaryBackground};\n\n    border-radius: 1rem;\n\n    ${gapsRow(\"0.5rem\")}\n`;\n\nexport default function Switcher({ children, ...props }) {\n    return (\n        <StyledSwitcher {...props}>\n            {children}\n        </StyledSwitcher>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainerSidebar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n    }\n`;\nconst StyledSidebar = styled.div`\n    flex: 1;\n\n    @media (min-width: 721px) {\n        margin-right: 2rem;\n    }\n    @media (max-width: 720px) {\n        margin-bottom: 1.5rem;\n    }\n`;\nconst StyledBody = styled.div`\n    flex: 3;\n`;\n\nexport default function ContainerSidebar({ sidebar, children, ...props }) {\n    return (\n        <StyledContainerSidebar {...props}>\n           <StyledSidebar>\n               {sidebar}\n           </StyledSidebar>\n           <StyledBody>\n               {children}\n           </StyledBody>\n       </StyledContainerSidebar>\n    );\n}\n","import Tag from \"components/tag\";\nimport {faBomb, faExclamationTriangle, faFilm} from \"@fortawesome/free-solid-svg-icons\";\nimport Flex from \"components/flex\";\nimport React from \"react\";\n\nexport default function ThemeEntryTags({ entry }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag icon={faFilm}>\n                {entry.episodes || \"—\"}\n            </Tag>\n            {!!entry.spoiler && (\n                <Tag icon={faBomb} warning>\n                    SPOILER\n                </Tag>\n            )}\n            {!!entry.nsfw && (\n                <Tag icon={faExclamationTriangle} warning>\n                    NSFW\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import React from 'react';\nimport Title from \"components/text/title\";\nimport styled from \"styled-components\";\n\nconst StyledDescriptionList = styled.dl`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    margin: 0;\n`;\nconst StyledKey = styled.dt`\n    margin: 0 0 0.25rem 0;\n`;\nconst StyledValue = styled.dd`\n    margin: 0;\n\n    &:not(:last-child) {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nexport default function DescriptionList({ children, ...props }) {\n    return (\n        <StyledDescriptionList {...props}>\n            {Object.entries(children).map(([ title, description ]) => (\n                !!description && (\n                    <>\n                        <StyledKey>\n                            <Title variant=\"section\">{title}</Title>\n                        </StyledKey>\n                        <StyledValue>{description}</StyledValue>\n                    </>\n                )\n            ))}\n        </StyledDescriptionList>\n    );\n}\n","import {\n    faClosedCaptioning,\n    faComment,\n    faCompactDisc,\n    faEye,\n    faNotEqual,\n    faStream\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Tag from \"components/tag\";\nimport Flex from \"components/flex\";\n\nexport default function VideoTags({ video }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag title=\"Resolution\">\n                {video.resolution}p\n            </Tag>\n\n            {!!video.nc && (\n                <Tag icon={faNotEqual} title=\"No Credits\"/>\n            )}\n\n            {!!video.subbed && (\n                <Tag icon={faClosedCaptioning} title=\"With Subtitles\"/>\n            )}\n\n            {!!video.lyrics && (\n                <Tag icon={faComment} title=\"With Lyrics\"/>\n            )}\n\n            {!!video.uncen && (\n                <Tag icon={faEye} title=\"Uncensored\"/>\n            )}\n\n            {!!video.source && (\n                <Tag icon={faCompactDisc} title=\"Source\">\n                    {video.source.toUpperCase()}\n                </Tag>\n            )}\n\n            {video.overlap !== \"None\" && (\n                <Tag icon={faStream} title=\"Overlap\">\n                    {video.overlap.toUpperCase()}\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"components/card\";\n\nconst StyledCollapse = styled.div`\n    height: ${(props) => props.height};\n    overflow: hidden;\n    transition: height 250ms;\n`;\n\nexport default function CollapseCard({ children, ...props }) {\n    const [collapse, setCollapse] = useState(true);\n    const [height, setHeight] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        setHeight(ref.current.children[0].offsetHeight);\n    }, [collapse, children]);\n\n    return (\n        <Card hoverable onClick={() => setCollapse(!collapse)} {...props}>\n            <StyledCollapse ref={ref} height={height ? `${height}px` : \"auto\"}>\n                {children(collapse)}\n            </StyledCollapse>\n        </Card>\n    );\n}\n","import styled, {css} from \"styled-components\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport {gapsColumn} from \"styles/mixins\";\nimport Card from \"components/card\";\n\nexport const StyledThemeCard = styled(Card)`\n    ${gapsColumn()}\n`;\n\nexport const StyledRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nexport const StyledSequence = styled(Text)`\n    flex: 0 0 2.5rem;\n\n    display: flex;\n\n    color: ${(props) => props.theme.colors.primaryTitle};\n\n    ${(props) => props.secondary && css`\n        color: ${(props) => props.theme.colors.primaryMediumEmphasis};\n\n        @media (max-width: 720px) {\n            align-self: flex-start;\n        }\n    `}\n`;\n\nexport const StyledHeader = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVersion = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n        align-items: flex-start;\n\n        ${gapsColumn()}\n    }\n`;\n\nexport const StyledVideoListContainer = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVideoList = styled(Flex).attrs({\n    row: true,\n    wrap: true,\n    gapsBoth: \"0.75rem\"\n})`\n    @media (min-width: 721px) {\n        justify-content: flex-end;\n    }\n`;\n","import React from \"react\";\nimport {\n    StyledHeader,\n    StyledRow,\n    StyledSequence,\n    StyledThemeCard,\n    StyledVersion,\n    StyledVideoList,\n    StyledVideoListContainer\n} from \"./style\";\nimport Elevator from \"components/elevator\";\nimport VideoButton from \"components/button/video\";\nimport SongTitleWithArtists from \"components/utils/songTitleWithArtists\";\nimport ThemeEntryTags from \"components/utils/themeEntryTags\";\nimport Title from \"components/text/title\";\n\nexport default function ThemeCard({ theme }) {\n    return (\n        <StyledThemeCard>\n            <Elevator>\n                <StyledRow>\n                    <StyledSequence small>{theme.slug}</StyledSequence>\n                    <StyledHeader>\n                        <Title variant=\"card\">\n                            <SongTitleWithArtists song={theme.song}/>\n                        </Title>\n                    </StyledHeader>\n                </StyledRow>\n                {theme.entries.map(entry => (\n                    <StyledRow key={entry.version || 0}>\n                        <StyledSequence small secondary>{!!entry.version && `v${entry.version}`}</StyledSequence>\n                        <StyledVersion>\n                            <ThemeEntryTags entry={entry}/>\n                            {!!entry.videos && (\n                                <StyledVideoListContainer>\n                                    <StyledVideoList>\n                                        {entry.videos.map((video, index) => (\n                                            <VideoButton key={index} video={video}/>\n                                        ))}\n                                    </StyledVideoList>\n                                </StyledVideoListContainer>\n                            )}\n                        </StyledVersion>\n                    </StyledRow>\n                ))}\n            </Elevator>\n        </StyledThemeCard>\n    );\n}\n","import React, {useMemo, useState} from \"react\";\nimport ThemeCard from \"components/card/theme\";\nimport Flex, {FlexItem} from \"components/flex\";\nimport Button from \"components/button\";\nimport Switcher from \"components/switcher\";\n\nexport default function ThemeSwitcher({ themes }) {\n    const groups = useMemo(() => themes.reduce((groups, theme) => {\n        const group = groups.find((group) => group.name === theme.group);\n        if (!group) {\n            groups.push({\n                name: theme.group,\n                themes: [theme],\n            });\n        } else {\n            group.themes.push(theme);\n        }\n        return groups;\n    }, []), [ themes ]);\n\n    const [activeGroup, setActiveGroup] = useState(groups[0]);\n\n    return (\n        <Flex gapsColumn=\"1rem\">\n            {groups.length > 1 && (\n                <FlexItem alignSelf=\"flex-start\">\n                    <Switcher>\n                        {groups.map((group) => (\n                            <Button\n                                key={group.name}\n                                active={activeGroup === group}\n                                onClick={() => setActiveGroup(group)}\n                            >\n                                {group.name || \"Original\"}\n                            </Button>\n                        ))}\n                    </Switcher>\n                </FlexItem>\n            )}\n            {activeGroup.themes.map((theme, index) => (\n                <ThemeCard key={index} theme={theme} />\n            ))}\n        </Flex>\n    );\n}\n","import React from \"react\";\nimport {graphql, Link} from \"gatsby\";\nimport styled from \"styled-components\";\nimport useAniList from \"../hooks/useAniList\";\nimport ExternalLink from \"../components/externalLink\";\nimport DescriptionList from \"components/descriptionList\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport Flex from \"components/flex\";\nimport ContainerSidebar from \"components/container/sidebar\";\nimport CollapseCard from \"components/card/collapse\";\nimport {fullWidth, gapsColumn} from \"styles/mixins\";\nimport ThemeSwitcher from \"components/switcher/theme\";\nimport SEO from \"components/seo\";\n\nconst StyledAnimePage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledCover = styled.img(fullWidth);\nconst StyledList = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    ${gapsColumn(\"0.5rem\")}\n\n    text-align: center;\n`;\n\nexport default function AnimeDetailPage({ data: { anime } }) {\n    const { synopsis, image } = useAniList(anime);\n\n    const sidebar = (\n        <Flex gapsColumn=\"1.5rem\">\n            <StyledCover src={image} alt=\"Cover\"/>\n            <DescriptionList>\n                {{\n                    \"Alternative Titles\": (\n                        !!anime.synonyms.length && (\n                            <StyledList>\n                                {anime.synonyms.map((synonym) => (\n                                    <Text key={synonym}>{synonym}</Text>\n                                ))}\n                            </StyledList>\n                        )\n                    ),\n                    \"Premiere\": (\n                        <Link to={`/year/${anime.year}${anime.season ? `/${anime.season.toLowerCase()}` : \"\"}`}>\n                            <Text link>\n                                {(anime.season ? anime.season + \" \" : \"\") + anime.year}\n                            </Text>\n                        </Link>\n                    ),\n                    \"Series\": (\n                        !!anime.series && !!anime.series.length && (\n                            <StyledList>\n                                {anime.series.map((series) =>\n                                    <Link to={`/series/${series.slug}`}>\n                                        <Text link>\n                                            {series.name}\n                                        </Text>\n                                    </Link>\n                                )}\n                            </StyledList>\n                        )\n                    ),\n                    \"Links\": (\n                        !!anime.resources && anime.resources.map((resource) => (\n                            <ExternalLink key={resource.link} href={resource.link}>\n                                {resource.site}\n                            </ExternalLink>\n                        ))\n                    )\n                }}\n            </DescriptionList>\n        </Flex>\n    );\n\n    return (\n        <StyledAnimePage>\n            <SEO title={anime.name} />\n            <Title>{anime.name}</Title>\n            <ContainerSidebar sidebar={sidebar}>\n                <Flex gapsColumn=\"1rem\">\n                    <Title variant=\"section\">Synopsis</Title>\n                    <CollapseCard>\n                        {(collapse) => (\n                            <Text maxLines={collapse ? 2 : null} dangerouslySetInnerHTML={{ __html: synopsis }}/>\n                        )}\n                    </CollapseCard>\n                    <Title variant=\"section\">Themes</Title>\n                    {\n                        !!anime.themes && anime.themes.length\n                        ? <ThemeSwitcher themes={anime.themes}/>\n                        : <Text>There are no themes for this anime.</Text>\n                    }\n                </Flex>\n            </ContainerSidebar>\n        </StyledAnimePage>\n    );\n}\n\nexport const query = graphql`\n    query($slug: String!) {\n        anime(slug: { eq: $slug }) {\n            name\n            year\n            season\n            synonyms\n            series {\n                slug\n                name\n            }\n            themes {\n                group\n                slug\n                song {\n                    title\n                    performances {\n                        artist {\n                            slug\n                            name\n                        }\n                        as\n                    }\n                }\n                entries {\n                    episodes\n                    nsfw\n                    spoiler\n                    version\n                    videos {\n                        filename\n                        lyrics\n                        nc\n                        overlap\n                        resolution\n                        source\n                        subbed\n                        uncen\n                    }\n                }\n            }\n            resources {\n                link\n                site\n            }\n        }\n    }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircleNotch, faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\nconst StyledBody = styled.div`\n    padding: 0.5rem;  \n`;\n\nexport default function ButtonPlay({ children, playing, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={playing ? faCircleNotch : faPlay} spin={playing} fixedWidth />\n            </StyledPrefix>\n            <StyledBody>\n                {children}\n            </StyledBody>\n        </StyledButtonPlay>\n    );\n}\n","import Text from \"components/text\";\nimport {Link} from \"gatsby\";\n\nexport default function SongTitleWithArtists({ song }) {\n    return (\n        <>\n            <span>{song.title}</span>\n            {!!song.performances && !!song.performances.length && (\n                <>\n                    <Text small> by </Text>\n                    {song.performances.map((performance, index) => (\n                        <>\n                            <Link to={`/artist/${performance.artist.slug}`}>\n                                <Text key={performance.as || performance.artist.name} link>\n                                    {performance.as || performance.artist.name}\n                                </Text>\n                            </Link>\n                            {index < song.performances.length - 1 && (\n                                <Text small>\n                                    {index === song.performances.length - 2 ? \" & \" : \", \"}\n                                </Text>\n                            )}\n                        </>\n                    ))}\n                </>\n            )}\n        </>\n    );\n}\n","import ButtonPlay from \"components/button/play\";\nimport VideoTags from \"components/utils/videoTags\";\nimport {useContext} from \"react\";\nimport PlayerContext from \"context/playerContext\";\n\nexport default function VideoButton({ video, ...props }) {\n    const { currentVideo } = useContext(PlayerContext);\n\n    return (\n        <ButtonPlay to={`/video/${video.filename}`} playing={currentVideo && currentVideo.filename === video.filename} {...props}>\n            <VideoTags video={video}/>\n        </ButtonPlay>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronCircleRight} from \"@fortawesome/free-solid-svg-icons\";\nimport Text from \"components/text\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledExternalLink = styled(Text).attrs({\n    forwardedAs: \"a\",\n    link: true\n})`\n    ${gapsRow(\"0.25rem\")}\n`;\n\nexport default function ExternalLink({ href, children, ...props }) {\n    return (\n        <StyledExternalLink href={href} target=\"_blank\" {...props}>\n            <span>{children}</span>\n            <FontAwesomeIcon icon={faChevronCircleRight}/>\n        </StyledExternalLink>\n    );\n}\n"],"sourceRoot":""}